<?xml version="1.0" ?><QA><users><user id="277826"><displayname>sdaau</displayname><age>-1</age><ismoderator>false</ismoderator><email>sdaau@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="236455"><displayname>Fraser Graham</displayname><age>-1</age><ismoderator>false</ismoderator><email>Fraser Graham@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="69307"><displayname>anon</displayname><age>-1</age><ismoderator>false</ismoderator><email>anon@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="324528"><displayname>ipeet</displayname><age>-1</age><ismoderator>false</ismoderator><email>ipeet@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="354803"><displayname>ShinTakezou</displayname><age>-1</age><ismoderator>false</ismoderator><email>ShinTakezou@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="103167"><displayname>Ben Voigt</displayname><age>-1</age><ismoderator>false</ismoderator><email>Ben Voigt@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="366377"><displayname>Jens Gustedt</displayname><age>-1</age><ismoderator>false</ismoderator><email>Jens Gustedt@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="67022"><displayname>bstpierre</displayname><age>-1</age><ismoderator>false</ismoderator><email>bstpierre@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="448275"><displayname>trevor</displayname><age>-1</age><ismoderator>false</ismoderator><email>trevor@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="430719"><displayname>Bart van Ingen Schenau</displayname><age>-1</age><ismoderator>false</ismoderator><email>Bart van Ingen Schenau@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="20270"><displayname>Hasturkun</displayname><age>-1</age><ismoderator>false</ismoderator><email>Hasturkun@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="464709"><displayname>Frédéric Hamidi</displayname><age>-1</age><ismoderator>false</ismoderator><email>Frédéric Hamidi@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="371250"><displayname>ninjalj</displayname><age>-1</age><ismoderator>false</ismoderator><email>ninjalj@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="104596"><displayname>mpe</displayname><age>-1</age><ismoderator>false</ismoderator><email>mpe@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="130641"><displayname>John Ledbetter</displayname><age>-1</age><ismoderator>false</ismoderator><email>John Ledbetter@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="239696"><displayname>Michael Greene</displayname><age>-1</age><ismoderator>false</ismoderator><email>Michael Greene@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="121112"><displayname>Fragsworth</displayname><age>-1</age><ismoderator>false</ismoderator><email>Fragsworth@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="95810"><displayname>Alex Martelli</displayname><age>-1</age><ismoderator>false</ismoderator><email>Alex Martelli@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="182668"><displayname>Pointy</displayname><age>-1</age><ismoderator>false</ismoderator><email>Pointy@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="71058"><displayname>Craig Peterson</displayname><age>-1</age><ismoderator>false</ismoderator><email>Craig Peterson@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="236554"><displayname>manifest</displayname><age>-1</age><ismoderator>false</ismoderator><email>manifest@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="321013"><displayname>Martin</displayname><age>-1</age><ismoderator>false</ismoderator><email>Martin@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="237062"><displayname>ak2</displayname><age>-1</age><ismoderator>false</ismoderator><email>ak2@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="146909"><displayname>rsp2k</displayname><age>-1</age><ismoderator>false</ismoderator><email>rsp2k@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="912"><displayname>jkp</displayname><age>-1</age><ismoderator>false</ismoderator><email>jkp@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="118903"><displayname>Vinay Sajip</displayname><age>-1</age><ismoderator>false</ismoderator><email>Vinay Sajip@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="141186"><displayname>jpartogi</displayname><age>-1</age><ismoderator>false</ismoderator><email>jpartogi@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="126042"><displayname>Mark Rushakoff</displayname><age>-1</age><ismoderator>false</ismoderator><email>Mark Rushakoff@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="176958"><displayname>whatnick</displayname><age>-1</age><ismoderator>false</ismoderator><email>whatnick@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="137317"><displayname>kaizer.se</displayname><age>-1</age><ismoderator>false</ismoderator><email>kaizer.se@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="180174"><displayname>Kimvais</displayname><age>-1</age><ismoderator>false</ismoderator><email>Kimvais@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="16363"><displayname>Mark</displayname><age>-1</age><ismoderator>false</ismoderator><email>Mark@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="179910"><displayname>Jerry Coffin</displayname><age>-1</age><ismoderator>false</ismoderator><email>Jerry Coffin@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="299301"><displayname>nategoose</displayname><age>-1</age><ismoderator>false</ismoderator><email>nategoose@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="388520"><displayname>Zack</displayname><age>-1</age><ismoderator>false</ismoderator><email>Zack@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="20862"><displayname>Ignacio Vazquez-Abrams</displayname><age>-1</age><ismoderator>false</ismoderator><email>Ignacio Vazquez-Abrams@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="392358"><displayname>joe</displayname><age>-1</age><ismoderator>false</ismoderator><email>joe@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="275455"><displayname>frankc</displayname><age>-1</age><ismoderator>false</ismoderator><email>frankc@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="26428"><displayname>Dennis Williamson</displayname><age>-1</age><ismoderator>false</ismoderator><email>Dennis Williamson@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="402528"><displayname>trevor</displayname><age>-1</age><ismoderator>false</ismoderator><email>trevor@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="19563"><displayname>Charles Bailey</displayname><age>-1</age><ismoderator>false</ismoderator><email>Charles Bailey@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="406936"><displayname>zaga</displayname><age>-1</age><ismoderator>false</ismoderator><email>zaga@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="105043"><displayname>second</displayname><age>-1</age><ismoderator>false</ismoderator><email>second@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="389146"><displayname>Karl Bielefeldt</displayname><age>-1</age><ismoderator>false</ismoderator><email>Karl Bielefeldt@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="86432"><displayname>masonk</displayname><age>-1</age><ismoderator>false</ismoderator><email>masonk@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="324731"><displayname>lkraider</displayname><age>-1</age><ismoderator>false</ismoderator><email>lkraider@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="209744"><displayname>PP</displayname><age>-1</age><ismoderator>false</ismoderator><email>PP@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="224671"><displayname>KennyTM</displayname><age>-1</age><ismoderator>false</ismoderator><email>KennyTM@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="151292"><displayname>James McNellis</displayname><age>-1</age><ismoderator>false</ismoderator><email>James McNellis@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="338803"><displayname>sje397</displayname><age>-1</age><ismoderator>false</ismoderator><email>sje397@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="22985"><displayname>BatchyX</displayname><age>-1</age><ismoderator>false</ismoderator><email>BatchyX@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="202555"><displayname>Amnon</displayname><age>-1</age><ismoderator>false</ismoderator><email>Amnon@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user><user id="119280"><displayname>DVK</displayname><age>-1</age><ismoderator>false</ismoderator><email>DVK@gmail.com</email><password>secret</password><aboutme></aboutme><location></location><website></website></user></users><questions><question id="4119991"><ownerid>277826</ownerid><creationdate>1289168092</creationdate><lastactivity>1289176685</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;Lets say I have a script, "&lt;code&gt;myscript.sh&lt;/code&gt;", with contents being simply &lt;code&gt;echo $PWD&lt;/code&gt;. I'd like to bind somehow this script to a key combo in &lt;code&gt;bash&lt;/code&gt; (&lt;code&gt;gnome-terminal&lt;/code&gt;) - so that when I press this key combination, the output of "&lt;code&gt;myscript.sh&lt;/code&gt;" is inserted ("pasted") at the cursor position in the terminal. &lt;/p&gt;&lt;p&gt;Apparently, &lt;code&gt;bash&lt;/code&gt; history and line manipulation is handled by &lt;a href="http://en.wikipedia.org/wiki/Readline" rel="nofollow"&gt;readline&lt;/a&gt; - and the references I got for &lt;code&gt;bash&lt;/code&gt; keyboard shortcuts, do reference &lt;code&gt;readline&lt;/code&gt;: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://ss64.com/bash/syntax-keyboard.html" rel="nofollow"&gt;bash keyboard shortcuts&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.faqs.org/docs/bashman/bashref_93.html" rel="nofollow"&gt;Bash Reference Manual: Bindable Readline Commands&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I've also seen in &lt;a href="http://www.faqs.org/docs/bashman/bashref_90.html" rel="nofollow"&gt;Bash Reference Manual: Readline Init File Syntax&lt;/a&gt; that the key bindings for &lt;code&gt;bash&lt;/code&gt; can be listed by using &lt;code&gt;bind -p&lt;/code&gt; (&lt;em&gt;see &lt;code&gt;help bind&lt;/code&gt; [not 'man bind'] for more&lt;/em&gt;). So maybe this question would better be titled as "_binding macros to custom keyboard shortcuts in &lt;code&gt;readline&lt;/code&gt;" :) But in any case, is what I want possible to do? &lt;/p&gt;&lt;p&gt;I guess an alternative would be to have the script be something like "&lt;code&gt;pwd | xsel -b&lt;/code&gt;", and then I call it on terminal - and I can paste afterwards; but I'd still like a single keyboard shortcut instead, say like Ctrl-Alt-H (which seems to be not used for anything), which will immediately insert/paste script output when pressed. &lt;/p&gt;&lt;p&gt;Thanks in advance,&lt;br&gt;Cheers!&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;br&gt;EDIT: Just to clarify - here is my use case where I'd like this facility. I'm usually &lt;code&gt;cd&lt;/code&gt;'d in a project folder, usually named something like &lt;code&gt;myproject-folder-0012a&lt;/code&gt;, which is under revision control by &lt;code&gt;svn&lt;/code&gt;. And there is a bunch of these folders. So quite often, I do commits where the first word of the message is the directory name, as in:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;svn ci -m "myproject-folder-0012a: here a commit message"&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But that is what I don't like - first I type 11 characters, which go rather fast: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;svn ci -m "&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And then, I cannot use autocompletion to get the name (i'm inside the folder) - which means I either have to fully type it (&lt;em&gt;no way :)&lt;/em&gt;), or I copy paste it from the prompt (which requires selection - press mouse, drag, release mouse; then Ctrl+Shift+C, and then Ctrl+Shift+V, plus any left/right keys if I miss allignment - plus deletions and such if I make the copy wrong). &lt;/p&gt;&lt;p&gt;Meaning - so much work, just to get the bloody folder name for a bloody commit message :( I'd MUCH rather press something like (say) Ctrl-Alt-H, and have the folder name automatically inserted at cursor position, and be done with it :) &lt;/p&gt;&lt;p&gt;My suggestion for &lt;code&gt;xsel&lt;/code&gt; is only because I could put it into a "global" script - say symlink it as &lt;code&gt;/usr/bin/myscript&lt;/code&gt; (&lt;em&gt;and obviously, the contents of the script are &lt;code&gt;echo $(basename $PWD)&lt;/code&gt; rather than just &lt;code&gt;pwd&lt;/code&gt; for my needs&lt;/em&gt;), and then I could do: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ myscript       # this puts directory name in clipboard$ svn ci -m "[CTRL+SHIFT+V TO PASTE HERE]myproject-folder-0012a[NOW TYPE]: here a commit message"&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... which sort of makes the workload less, but still - then I have to remember what the script name is, and call it, &lt;strong&gt;before&lt;/strong&gt; I type the &lt;code&gt;svn&lt;/code&gt; command (and I don't always remember that)... And still - I have to call a command, and then press a key combo; why shouldn't I just press a key combo once, and be done with it ??! :) &lt;/p&gt;&lt;p&gt;Well, hope this clarifies my problem a bit better .... &lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;br&gt;EDIT2: However, another reason why a &lt;code&gt;bash&lt;/code&gt; keyboard shortcut would be useful, is that then I could also "paste/insert current directory name" not only in shell commands - but also in terminal programs, say like &lt;code&gt;nano&lt;/code&gt; (&lt;em&gt;where it would, arguably, be more difficult to use &lt;code&gt;bash&lt;/code&gt; script or function expansion directly&lt;/em&gt;).&lt;/p&gt;]]&gt;</body><title>Bash: call script with customized keyboard shortcuts?</title><lastedit>1289176685</lastedit><acceptedanswer>-1</acceptedanswer><tags><tag id="0">linux</tag><tag id="1">bash</tag><tag id="2">keyboard-shortcuts</tag><tag id="3">readline</tag><tag id="4">customize</tag></tags></question><question id="4118207"><ownerid>277826</ownerid><creationdate>1289141038</creationdate><lastactivity>1289141538</lastactivity><body>&lt;![CDATA[&lt;p&gt;OK, this is my problem: &lt;/p&gt;&lt;p&gt;I use a virtual machine with a debug kernel, so I can connect to a local instance of &lt;code&gt;gdb&lt;/code&gt;, and can debug kernel modules. The modules are compiled with debug info on, and this specifies folders where the source of the modules is kept (&lt;a href="http://stackoverflow.com/questions/1579443/instruct-gdb-6-5-to-use-source-embedded-in-object-file"&gt;Instruct GDB 6.5 to use source embedded in object file - Stack Overflow&lt;/a&gt;). I have the source directories in the same path(s) in both VM and local machine. &lt;/p&gt;&lt;p&gt;The problem is this - I need to do quite a bit of steps in order to get the module to segfault - and the remote gdb to go into the stack. Then I do a backtrace, and I can see the source files referenced, i.e. &lt;/p&gt;&lt;pre&gt;&lt;code&gt;#0  0xc0132a13 in ?? ()#1  0xc056e551 in ?? ()#2  0xc056e506 in ?? ()#3  0xd8be53f3 in mymodule_func1 (var1=0xd79f9b44, var2=0x0, var3=825269148)    at /media/src/mymodule.h:954#4  0xd8be53d0 in mymodule_func2 (data=3617561412)    at /media/src/mymodule.h:936#5  0xc014fe87 in ?? ()#6  0xc0151478 in ?? ()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then I try to do say, &lt;code&gt;list /media/src/mymodule.h:954&lt;/code&gt; - and I realize that I have changed stuff on the local version of &lt;code&gt;mymodule.h&lt;/code&gt; file!! &lt;/p&gt;&lt;p&gt;So I undo the changes - but unfortunately, GDB does not see these changes! And, of course, I don't want to restart GDB - because that means I have to restart the VM, and go through the entire procedure in order to get the kernel module to segfault again :( !!&lt;/p&gt;&lt;p&gt;Then I try to do something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(gdb) show symbol-reloadingDynamic symbol table reloading multiple times in one run is off.(gdb) set symbol-reloading on(gdb) add-symbol-file ~/mymodule.o 0xd8be4000add symbol table from file "/media/src/mymodule.o" at    .text_addr = 0xd8be4000(y or n) yReading symbols from /media/src/mymodule.o...done.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... in hope that it will somehow "reload" the source files - but unfortunately, &lt;code&gt;list /media/src/mymodule.h:954&lt;/code&gt; shows that it doesn't, nothing is changed - even though &lt;code&gt;gdb&lt;/code&gt; &lt;strong&gt;does&lt;/strong&gt; recognize that something has changed, as in &lt;code&gt;warning: Source file is more recent than executable.&lt;/code&gt;... (&lt;sup&gt;&lt;sub&gt;so, for the time being, I have to restart entire VM and &lt;code&gt;gdb&lt;/code&gt; as well :( :(  &lt;/sub&gt;&lt;/sup&gt;)&lt;/p&gt;&lt;p&gt;So my &lt;strong&gt;question&lt;/strong&gt; is - is there a command in &lt;code&gt;gdb&lt;/code&gt;, that I can use to (re)load / "refresh" source files? (&lt;em&gt;as far as I can see, &lt;code&gt;gdb&lt;/code&gt; works only with source &lt;strong&gt;directories&lt;/strong&gt;, &lt;a href="http://davis.lbl.gov/Manuals/GDB/gdb_8.html" rel="nofollow"&gt;Debugging with GDB: Source&lt;/a&gt; - and there is no specific command to "refresh"&lt;/em&gt;)&lt;/p&gt;&lt;p&gt;Thanks in advance,&lt;br&gt;Cheers!&lt;/p&gt;]]&gt;</body><title>GDB - 'reload' source files</title><lastedit>1289141538</lastedit><acceptedanswer>-1</acceptedanswer><tags><tag id="0">gdb</tag><tag id="1">linux-kernel</tag><tag id="2">source</tag><tag id="3">reload</tag></tags></question><question id="4036743"><ownerid>277826</ownerid><creationdate>1288206519</creationdate><lastactivity>1288207390</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;Trying to write a Lua script for Scite (something like &lt;a href="http://lua-users.org/wiki/SciteCommentBox" rel="nofollow"&gt;lua-users wiki: Scite Comment Box&lt;/a&gt;), and when I write the following piece of code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;fchars = string.sub(line, 1, 3)if fchars == "//" or fchars == "##"   print "got it"end &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... the compilation fails with "&lt;code&gt;attempt to call a string value&lt;/code&gt;". &lt;/p&gt;&lt;p&gt;I have tried different variants, such as:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;assert(ktest = (("//" == fchars) or ("##" == fchars)))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... and it seems to me that compilation fails when I try to make a 'compound' boolean expression using the &lt;a href="http://www.lua.org/manual/5.0/manual.html#2.5.3" rel="nofollow"&gt;logical operator&lt;/a&gt; "&lt;code&gt;or&lt;/code&gt;". &lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;So, how would I do the above check in Lua? Maybe the C-like syntax as above is not supported at all - and I should use something like &lt;a href="http://www.lua.org/manual/5.1/manual.html#pdf-string.match" rel="nofollow"&gt;match&lt;/a&gt; instead? &lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Thanks in advance for any answers,&lt;br&gt;Cheers!&lt;/p&gt;]]&gt;</body><title>Scite Lua: string comparison raises "attempt to call a string value"?</title><lastedit>-1</lastedit><acceptedanswer>4036877</acceptedanswer><tags><tag id="0">lua</tag></tags></question><question id="4025320"><ownerid>277826</ownerid><creationdate>1288107521</creationdate><lastactivity>1288202745</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;I've been working with a userland program &lt;code&gt;writeread.c&lt;/code&gt; (referred &lt;a href="http://stackoverflow.com/questions/3701955/serial-port-loopback-duplex-test-in-bash-or-c-process-substitution"&gt;here&lt;/a&gt;), utilizing the &lt;code&gt;ftdi_sio&lt;/code&gt; Linux driver.&lt;/p&gt;&lt;p&gt;I had worked with the default &lt;code&gt;ftdi_sio&lt;/code&gt; that comes with Ubuntu Lucid that I use - and then, as a sanity check, decided to rebuild &lt;code&gt;ftdi_sio&lt;/code&gt; from source. I did not want to download the entire kernel source, so I opted for so called "building out-of-tree modules":&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.cyberciti.biz/tips/build-linux-kernel-module-against-installed-kernel-source-tree.html" rel="nofollow"&gt;Howto: Build Linux Kernel Module Against Installed Kernel w/o Full Kernel Source Tree&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://kernel-handbook.alioth.debian.org/ch-common-tasks.html#s-common-out-of-tree" rel="nofollow"&gt;Debian Linux Kernel Handbook - Common kernel-related tasks: Building out-of-tree kernel modules&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://fedoraproject.org/wiki/Docs/CustomKernel#Building_Only_Kernel_Modules_.28Out_Of_Tree_Modules.29" rel="nofollow"&gt;Building a custom kernel - FedoraProject: Building Only Kernel Modules (Out Of Tree Modules)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;... which means you can only have installed &lt;code&gt;linux-headers-*&lt;/code&gt; packages (instead of having entire &lt;code&gt;linux-source-*&lt;/code&gt; installed) - and the respective kernel module source - in order to build a kernel module. &lt;/p&gt;&lt;p&gt;So, I basically got the following files in a folder:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://kernel.ubuntu.com/git?p=ubuntu/ubuntu-lucid.git;a=blob_plain;f=drivers/usb/serial/ftdi_sio.c" rel="nofollow"&gt;ftdi_sio.c&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://kernel.ubuntu.com/git?p=ubuntu/ubuntu-lucid.git;a=blob_plain;f=drivers/usb/serial/ftdi_sio.h" rel="nofollow"&gt;ftdi_sio.h&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://kernel.ubuntu.com/git?p=ubuntu/ubuntu-lucid.git;a=blob_plain;f=drivers/usb/serial/ftdi_sio_ids.h" rel="nofollow"&gt;ftdi_sio_ids.h&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Makefile (included below) &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;and ran &lt;code&gt;make&lt;/code&gt; - and a &lt;code&gt;ftdi_sio.ko&lt;/code&gt; kernel objects compiles, which also can be &lt;code&gt;insmod&lt;/code&gt;-ed without a problem. &lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;The problem is now here - as long as I work with low speeds (115200 bps), there is &lt;em&gt;no observable difference&lt;/em&gt; between: loading the 'vanilla' driver (&lt;em&gt;using &lt;code&gt;sudo modprobe ftdi_sio&lt;/code&gt;&lt;/em&gt;); and loading the newly built driver (&lt;em&gt;using &lt;code&gt;sudo modprobe usbserial; sudo insmod /path/to/ftdi_sio.ko&lt;/code&gt;&lt;/em&gt;) - in respect to the performance of the userland program (&lt;code&gt;writeread.c&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;However, if I try the same at 2000000 bps, then the 'vanilla' driver works fine -  while the build driver causes a &lt;strong&gt;segfault&lt;/strong&gt; of the userland program (&lt;code&gt;writeread.c&lt;/code&gt;). In particular, this segfault happened at &lt;code&gt;free()&lt;/code&gt;-ing memory resources - because the driver would end up reading &lt;em&gt;more&lt;/em&gt; bytes from the loopback connection, than it itself would write! However, that in itself is not that relevant for this discussion, because I finally found a way to get the built &lt;code&gt;ftdi_sio&lt;/code&gt; to work (&lt;em&gt;Edit: just noticed that a similar procedure is also given in &lt;a href="http://stackoverflow.com/questions/2237871/external-linux-kernel-module-dependencies/2238581#2238581"&gt;External Linux kernel module dependencies R#2238581 - Stack Overflow&lt;/a&gt;&lt;/em&gt;): &lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ sudo modprobe -r ftdi_sio # remove 'vanilla' driver from memory ...# build the driver$ cd /path/to/ftdi_sio_2.6.32/$ make clean &amp;amp;&amp;amp; make # check vanilla version$ ls -la /lib/modules/2.6.32-25-generic/kernel/drivers/usb/serial/ftdi_sio.ko-rw-r--r-- 1 root root 102396 2010-10-17 01:47 /lib/modules/2.6.32-25-generic/kernel/drivers/usb/serial/ftdi_sio.ko# (re)move the 'vanilla' kernel object$ sudo mv /lib/modules/2.6.32-25-generic/kernel/drivers/usb/serial/ftdi_sio.ko ~/Desktop/ftdi_sio_orig.ko  # symlink our built version, as if it is the 'vanilla' one$ sudo ln -s /path/to/ftdi_sio_2.6.32/ftdi_sio.ko /lib/modules/2.6.32-25-generic/kernel/drivers/usb/serial/# check $ ls -la /lib/modules/2.6.32-25-generic/kernel/drivers/usb/serial/ftdi_sio.kolrwxrwxrwx 1 root root 57 2010-10-26 12:49 /lib/modules/2.6.32-25-generic/kernel/drivers/usb/serial/ftdi_sio.ko -&amp;gt; /path/to/ftdi_sio_2.6.32/ftdi_sio.ko# call depmod$ sudo depmod# !! plug in USB at this point, built driver autoloads;# however, running `writeread.c` will segfault!# !! REBOOT at this point# after reboot:# !! plug in USB at this point, built driver autoloads;# and `writeread.c` runs without segfault&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, my &lt;strong&gt;question&lt;/strong&gt; is: can anyone clarify to me, why - even after running &lt;code&gt;depmod&lt;/code&gt; - do I &lt;em&gt;still&lt;/em&gt; have to reboot, to have the built driver behave properly? In other words: is there any other command I could call (&lt;em&gt;maybe after &lt;code&gt;depmod&lt;/code&gt;&lt;/em&gt;), so that the driver works properly when it's loaded, &lt;em&gt;without&lt;/em&gt; rebooting? &lt;/p&gt;&lt;p&gt;The reason I'm asking, is that I suspect that upon each recompilation of the kernel module, the symbol table will change - so to ensure that it works properly, I'd have to run &lt;code&gt;depmod&lt;/code&gt; and reboot after each time the driver is built - which I think would be kind of tedious :) So, it would be nice to be able to rebuild the kernel module, and use it in the same session - without having to reboot. &lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Well, thanks in advance for any answers, &lt;/p&gt;&lt;p&gt;Cheers!!&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Makefile:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;CONFIG_MODULE_FORCE_UNLOAD=y# flags passed to gcc for compilation - -v:verbose, -H:show include files# KBUILD_CFLAGS += -v# for debugging make itself, use --debug=i in make command for targets# debug build:EXTRA_CFLAGS=-g -O0KVERSION = $(shell uname -r)obj-m += ftdi_sio.oall:    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modulesclean:    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Building out-of-tree kernel modules, depmod - and, why reboot? </title><lastedit>1288202745</lastedit><acceptedanswer>-1</acceptedanswer><tags><tag id="0">linux-kernel</tag></tags></question><question id="3999114"><ownerid>277826</ownerid><creationdate>1287766461</creationdate><lastactivity>1287781828</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;Apparently this is almost a duplicate of "&lt;a href="http://stackoverflow.com/questions/1057638/bad-pipe-filedescriptor-when-reading-from-stdin-in-python"&gt;Bad pipe filedescriptor when reading from stdin in python - Stack Overflow&lt;/a&gt;"; however, I believe this case is slightly more complicated (&lt;em&gt;and it is not Windows specific, as the conclusion of that thread was&lt;/em&gt;). &lt;/p&gt;&lt;p&gt;I'm currently trying to experiment with a simple script in Python: I'd like to supply input to the script - either through command line arguments; or by 'pipe'-ing a string to this script - and have the script show this input string using a &lt;code&gt;curses&lt;/code&gt; terminal interface. &lt;/p&gt;&lt;p&gt;The full script, here called &lt;code&gt;testcurses.py&lt;/code&gt;, is given below. The problem is that whenever I try the actual piping, that seems to mess up stdin, and the &lt;code&gt;curses&lt;/code&gt; window never shows. Here is a terminal output: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;## CASE 1: THROUGH COMMAND LINE ARGUMENT (arg being stdin):##$ ./testcurses.py -['-'] 1stdout/stdin (obj): &amp;lt;open file '&amp;lt;stdout&amp;gt;', mode 'w' at 0xb77dc078&amp;gt; &amp;lt;open file '&amp;lt;stdin&amp;gt;', mode 'r' at 0xb77dc020&amp;gt;stdout/stdin (fn): 1 0env(TERM): xterm xtermstdin_termios_attr [27906, 5, 1215, 35387, 15, 15, ['\x03', ... '\x00']]stdout_termios_attr [27906, 5, 1215, 35387, 15, 15, ['\x03', ... '\x00']]opening -obj &amp;lt;open file '&amp;lt;stdin&amp;gt;', mode 'r' at 0xb77dc020&amp;gt;TYPING blabla HEREwr TYPING blabla HEREat endbefore curses TYPING blabla HERE## AT THIS POINT:# in this case, curses window is shown, with the text 'TYPING blabla HERE'# ################## CASE 2: THROUGH PIPE#### NOTE I get the same output, even if I try syntax as in SO1057638, like:## python -c "print 'TYPING blabla HERE'" | python testcurses.py -##$ echo "TYPING blabla HERE" | ./testcurses.py -['-'] 1stdout/stdin (obj): &amp;lt;open file '&amp;lt;stdout&amp;gt;', mode 'w' at 0xb774a078&amp;gt; &amp;lt;open file '&amp;lt;stdin&amp;gt;', mode 'r' at 0xb774a020&amp;gt;stdout/stdin (fn): 1 0env(TERM): xterm xtermstdin_termios_attr &amp;lt;class 'termios.error'&amp;gt;::(22, 'Invalid argument')stdout_termios_attr [27906, 5, 1215, 35387, 15, 15, ['\x03', '\x1c', '\x7f', '\x15', '\x04', '\x00', '\x01', '\xff', '\x11', '\x13', '\x1a', '\xff', '\x12', '\x0f', '\x17', '\x16', '\xff', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']]opening -obj &amp;lt;open file '&amp;lt;stdin&amp;gt;', mode 'r' at 0xb774a020&amp;gt;wr TYPING blabla HEREat endbefore curses TYPING blabla HERE## AT THIS POINT:# script simply exits, nothing is shown # ################&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As far as I can see, the issue is: - whenever we pipe strings into the Python script, the Python script loses the reference to the &lt;em&gt;terminal&lt;/em&gt; as &lt;code&gt;stdin&lt;/code&gt;, and notices that the replaced &lt;code&gt;stdin&lt;/code&gt; is not a &lt;code&gt;termios&lt;/code&gt; structure anymore - and since &lt;code&gt;stdin&lt;/code&gt; is no longer a terminal, &lt;code&gt;curses.initscr()&lt;/code&gt; exits immediately without rendering anything. &lt;/p&gt;&lt;p&gt;So, my &lt;strong&gt;question&lt;/strong&gt; is - in brief: can I somehow achieve, that the syntax &lt;code&gt;echo "blabla" | ./testcurses.py -&lt;/code&gt; ends up showing the piped string in &lt;code&gt;curses&lt;/code&gt;? More specifically: is it possible to retrieve a reference to the calling terminal's &lt;code&gt;stdin&lt;/code&gt; from a Python script, even if this script is being "piped" to? &lt;/p&gt;&lt;p&gt;Thanks in advance for any pointers, &lt;/p&gt;&lt;p&gt;Cheers! &lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;PS: the &lt;code&gt;testcurses.py&lt;/code&gt; script:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python # http://www.tuxradar.com/content/code-project-build-ncurses-ui-python# http://diveintopython.org/scripts_and_streams/stdin_stdout_stderr.html# http://bytes.com/topic/python/answers/42283-curses-disable-readline-replace-stdin## NOTE: press 'q' to exit curses - Ctrl-C will screw up yer terminal# ./testcurses.py "blabla"                  # works fine (curseswin shows)# ./testcurses.py -                     # works fine, (type, enter, curseswins shows):# echo "blabla" | ./testcurses.py "sdsd"        # fails to raise curses window # # NOTE: when without pipe: termios.tcgetattr(sys.__stdin__.fileno()): [27906, 5, 1215, 35387, 15, 15, ['\x03', # NOTE: when with pipe |   : termios.tcgetattr(sys.__stdin__.fileno()): termios.error: (22, 'Invalid argument') import cursesimport sysimport osimport atexitimport termiosdef openAnything(source):                """URI, filename, or string --&amp;gt; stream    http://diveintopython.org/xml_processing/index.html#kgp.divein    This function lets you define parsers that take any input source    (URL, pathname to local or network file, or actual data as a string)    and deal with it in a uniform manner.  Returned object is guaranteed    to have all the basic stdio read methods (read, readline, readlines).    Just .close() the object when you're done with it.    """    if hasattr(source, "read"):        return source    if source == '-':        import sys        return sys.stdin    # try to open with urllib (if source is http, ftp, or file URL)    import urllib                             try:                                          return urllib.urlopen(source)         except (IOError, OSError):                    pass                                  # try to open with native open function (if source is pathname)    try:                                          return open(source)                   except (IOError, OSError):                    pass                                  # treat source as string    import StringIO                           return StringIO.StringIO(str(source)) def main(argv):    print argv, len(argv)    print "stdout/stdin (obj):", sys.__stdout__, sys.__stdin__     print "stdout/stdin (fn):", sys.__stdout__.fileno(), sys.__stdin__.fileno()    print "env(TERM):", os.environ.get('TERM'), os.environ.get("TERM", "unknown")    stdin_term_attr = 0    stdout_term_attr = 0    try:        stdin_term_attr = termios.tcgetattr(sys.__stdin__.fileno())    except:        stdin_term_attr = "%s::%s" % (sys.exc_info()[0], sys.exc_info()[1])     try:        stdout_term_attr = termios.tcgetattr(sys.__stdout__.fileno())    except:        stdout_term_attr = `sys.exc_info()[0]` + "::" + `sys.exc_info()[1]`     print "stdin_termios_attr", stdin_term_attr    print "stdout_termios_attr", stdout_term_attr    fname = ""    if len(argv):        fname = argv[0]    writetxt = "Python curses in action!"    if fname != "":        print "opening", fname        fobj = openAnything(fname)        print "obj", fobj        writetxt = fobj.readline(100) # max 100 chars read        print "wr", writetxt        fobj.close()        print "at end"    sys.stderr.write("before ")    print "curses", writetxt    try:        myscreen = curses.initscr()        #~ atexit.register(curses.endwin)    except:        print "Unexpected error:", sys.exc_info()[0]    sys.stderr.write("after initscr") # this won't show, even if curseswin runs fine    myscreen.border(0)    myscreen.addstr(12, 25, writetxt)    myscreen.refresh()    myscreen.getch()    #~ curses.endwin()    atexit.register(curses.endwin)    sys.stderr.write("after end") # this won't show, even if curseswin runs fine# run the main function - with arguments passed to script:if __name__ == "__main__":    main(sys.argv[1:])    sys.stderr.write("after main1") # these won't show either, sys.stderr.write("after main2")     #  (.. even if curseswin runs fine ..)&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Linux: Pipe into Python (ncurses) script, stdin and termios</title><lastedit>-1</lastedit><acceptedanswer>3999695</acceptedanswer><tags><tag id="0">python</tag><tag id="1">linux</tag><tag id="2">pipe</tag><tag id="3">ncurses</tag><tag id="4">termios</tag></tags></question><question id="3940973"><ownerid>277826</ownerid><creationdate>1287134690</creationdate><lastactivity>1287139603</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;I'm using the following database:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;CREATE TABLE datas (d_id INTEGER PRIMARY KEY, name_id numeric, countdata numeric);INSERT INTO datas VALUES(1,1,20);  //(NULL,1,20);INSERT INTO datas VALUES(2,1,47);  //(NULL,1,47);INSERT INTO datas VALUES(3,2,36);  //(NULL,2,36);INSERT INTO datas VALUES(4,2,58);  //(NULL,2,58);INSERT INTO datas VALUES(5,2,87);  //(NULL,2,87);CREATE TABLE names (n_id INTEGER PRIMARY KEY, name text);INSERT INTO names VALUES(1,'nameA'); //(NULL,'nameA');INSERT INTO names VALUES(2,'nameB'); //(NULL,'nameB');&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;What I would like to do, is to select all values (rows) of &lt;code&gt;names&lt;/code&gt; - to which all columns of &lt;code&gt;datas&lt;/code&gt; will be appended, for the row where &lt;code&gt;datas&lt;/code&gt;.&lt;code&gt;countdata&lt;/code&gt; is maximum for &lt;code&gt;n_id&lt;/code&gt; (and of course, where &lt;code&gt;name_id = n_id&lt;/code&gt;). &lt;/p&gt;&lt;p&gt;I can somewhat get there with the following query: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; .header ONsqlite&amp;gt; SELECT * FROM names AS n1     LEFT OUTER JOIN (        SELECT d_id, name_id, countdata FROM datas AS d1         WHERE d1.countdata IN (            SELECT MAX(countdata) FROM datas             WHERE name_id=1             )         ) AS p1 ON n_id=name_id;n1.n_id|n1.name|p1.d_id|p1.name_id|p1.countdata1|nameA|2|1|472|nameB|||&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... however - obviously - it only works for a single row (the one explicitly set by &lt;code&gt;name_id=1&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;The problem is, the SQL query fails whenever I try to somehow reference the "current" &lt;code&gt;n_id&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; SELECT * FROM names AS n1     LEFT OUTER JOIN (        SELECT d_id, name_id, countdata FROM datas AS d1         WHERE d1.countdata IN (            SELECT MAX(countdata) FROM datas             WHERE name_id=n1.n_id             )         ) AS p1 ON n_id=name_id;SQL error: no such column: n1.n_id&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Is there any way of achieving what I want in Sqlite2??&lt;/p&gt;&lt;p&gt;Thanks in advance, &lt;/p&gt;&lt;p&gt;Cheers!&lt;/p&gt;]]&gt;</body><title>sqlite2: Joining max values per column from another table (subquery reference)?</title><lastedit>1287135332</lastedit><acceptedanswer>3941502</acceptedanswer><tags><tag id="0">join</tag><tag id="1">subquery</tag><tag id="2">max</tag><tag id="3">sqlite2</tag></tags></question><question id="3921931"><ownerid>277826</ownerid><creationdate>1286958650</creationdate><lastactivity>1286974996</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, I am using Ubuntu 10.04, and studying programming of kernel objects. &lt;/p&gt;&lt;p&gt;I have come across some rather complicated structs which I have difficulties reading, so I thought I'd try to find some tool that can help me visualise them. &lt;/p&gt;&lt;p&gt;Only thing I could find so far is &lt;a href="http://rw4.cs.uni-sb.de/~sander/html/gsvcg1.html" rel="nofollow"&gt;VCG&lt;/a&gt;, which has a &lt;a href="http://rw4.cs.uni-sb.de/~sander/html/gsvcg6.html" rel="nofollow"&gt;C Struct Visualization Example&lt;/a&gt;, which looks like this: &lt;img src="http://img404.imageshack.us/img404/9492/structsa.gif" width="500"&gt;&lt;/p&gt;&lt;p&gt;which looks like something I'd like to use. &lt;/p&gt;&lt;p&gt;First thing, is that the last VCG packaged for Ubuntu is &lt;a href="http://packages.ubuntu.com/hardy/vcg" rel="nofollow"&gt;vcg (1.30debian-6) in hardy&lt;/a&gt; - but the .deb package can be downloaded and installed in Ubuntu Lucid without problems. &lt;/p&gt;&lt;p&gt;However, it seems this package is only a VCG &lt;em&gt;viewer&lt;/em&gt; (similar to &lt;a href="http://code.google.com/p/vcgviewer/" rel="nofollow"&gt;vcgviewer&lt;/a&gt;, I'd guess). The &lt;a href="http://code.google.com/p/vcgviewer/" rel="nofollow"&gt;vcgviewer&lt;/a&gt; page notes:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;To generate compiler graph data with newest gcc compilers use:gcc -g -da -dv -fdump-tree-original-raw -fdump-tree-all-all &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, apparently I'd have to use those switches along with &lt;code&gt;gcc&lt;/code&gt; while compiling, to generate .vcg graph files from the C source. &lt;/p&gt;&lt;p&gt;The problem, however, is that I'm building a kernel module, which only references the Linux headers - as I try to avoid as much as I can the recompilation of entire kernel. And it seems, as soon as I try to use &lt;code&gt;-fdump-tree-...&lt;/code&gt; switches in that context (kernel module), &lt;code&gt;gcc&lt;/code&gt; wants to start compiling the rest of the kernel too! (&lt;em&gt;and obviously fails, in both compilation and generation of .vcg graphs - as I don't have the kernel sources, only headers&lt;/em&gt;) &lt;br/&gt; &lt;br/&gt;&lt;/p&gt;&lt;p&gt;So my &lt;strong&gt;question&lt;/strong&gt; is - is there a tool, that would produce .vcg or .dot graphs of structs - simply using a plain text header file as input? (&lt;em&gt;it would not have to resolve all dependencies - simply those in header files in same directory&lt;/em&gt;) &lt;/p&gt;&lt;p&gt;EDIT: it is actually not that important for me that the backend is .vcg or .dot in particular, I mentioned them just because I've found them so far; any sort of software that would allow similar struct visualization, regardless of backend, is welcome :) &lt;br/&gt; &lt;br/&gt;&lt;/p&gt;&lt;p&gt;PS: Note that if you do not want to use VCG viewers for viewing .vcg graphs, you can convert the .vcg format to a .dot format, and use &lt;code&gt;graphviz&lt;/code&gt; instead for the visualisation. What worked for me is to use &lt;a href="http://search.cpan.org/~tels/Graph-Easy/bin/graph-easy" rel="nofollow"&gt;graph-easy - search.cpan.org&lt;/a&gt; for &lt;code&gt;perl&lt;/code&gt; - which first got packaged in Ubuntu with Maverick edition, as &lt;a href="http://packages.ubuntu.com/maverick/all/libgraph-easy-perl" rel="nofollow"&gt;libgraph-easy-perl&lt;/a&gt; (&lt;em&gt;however, the .deb file can - again - be downloaded and installed without problems in Lucid&lt;/em&gt;). &lt;code&gt;libgraph-easy-perl&lt;/code&gt; installs a &lt;code&gt;graph-easy&lt;/code&gt; script, which then allows to do stuff like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;graph-easy test.vcg --as_dot | dot -Tpng -o test.vcg.png &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See also "&lt;a href="https://mailman.research.att.com/pipermail/graphviz-interest/2007q2/004327.html" rel="nofollow"&gt;[graphviz-interest] VCG files&lt;/a&gt;" and "&lt;a href="http://gcc.gnu.org/ml/gcc/2007-03/msg00554.html" rel="nofollow"&gt;Diego Novillo - Re: can't find VCG viewer&lt;/a&gt;" for another vcg-to-dot script (&lt;em&gt;which, unfortunately, didn't work for me&lt;/em&gt;).&lt;/p&gt;]]&gt;</body><title>Visualising C structs?</title><lastedit>1286964440</lastedit><acceptedanswer>-1</acceptedanswer><tags><tag id="0">c</tag><tag id="1">linux</tag><tag id="2">struct</tag><tag id="3">visualization</tag></tags></question><question id="3701955"><ownerid>277826</ownerid><creationdate>1284392291</creationdate><lastactivity>1284546197</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;I have a serial device set up as loopback (meaning it will simply echo back any character it receives), and I'd like to measure effective throughput speed. For this, I hoped I could use &lt;code&gt;time&lt;/code&gt;, as in&lt;/p&gt;&lt;pre&gt;&lt;code&gt;time bash -c '...'&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;where '&lt;code&gt;...&lt;/code&gt;' would be some command I could run. &lt;/p&gt;&lt;p&gt;Now, the first problem is that I want to use the device at 2000000 bps, so I cannot use  &lt;a href="http://man.gnusquad.org/ttylog/section-8/en/" rel="nofollow"&gt;ttylog&lt;/a&gt; or &lt;a href="http://www.manpagez.com/man/1/screen/" rel="nofollow"&gt;screen&lt;/a&gt; (they both seem to go up to 115200 bps only). However, working with &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; as a file (using file redirection and &lt;code&gt;cat&lt;/code&gt;) seems to work fine:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# initialize serial portstty 2000000 -ixon icanon &amp;lt;/dev/ttyUSB0# check settingsstty -a -F /dev/ttyUSB0# in one terminal - read from serial portwhile (true) do cat -A /dev/ttyUSB0 ; done# in other terminal - write to serial portecho "1234567890" &amp;gt; /dev/ttyUSB0# back to first terminal, I now have:# $ while (true) do cat -A /dev/ttyUSB0 ; done# 1234567890$# ...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now, I'd like to do something similar - I'd like to &lt;code&gt;cat&lt;/code&gt; a file to a serial port, and have the serial port read back - but from a single terminal command (so I could use it as argument to &lt;code&gt;time&lt;/code&gt;). &lt;/p&gt;&lt;p&gt;I thought that I could use a Bash process substitution, to have the "writing" and "reading" part go, sort of, in "parallel" - if I try it with named pipes, it works:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# mkfifo my.pipe # same as below:$ mknod my.pipe p$ comm &amp;lt;(echo -e "test\ntest\ntest\n" &amp;gt; my.pipe) &amp;lt;(cat my.pipe)    test    test    testcomm: file 2 is not in sorted order&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Up there, I'm not using &lt;code&gt;comm&lt;/code&gt; for any other purpose, than to (sort of) merge the two processes into a single command (I guess, I could have just as well used &lt;code&gt;echo&lt;/code&gt; instead). &lt;/p&gt;&lt;p&gt;Unfortunately, that trick does not seem to work with a serial port, because when I try it, I sometimes get:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ comm &amp;lt;(echo "1234567890" &amp;gt; /dev/ttyUSB0) &amp;lt;(while (true) do cat -A /dev/ttyUSB0 ; done)cat: /dev/ttyUSB0: Invalid argument&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;..., however, usually I just get no output whatsoever. This tells me that: either there is no control of which process starts first, and so &lt;code&gt;cat&lt;/code&gt; may start reading before the port is ready (however, that doesn't seem to be a problem in the first example above); or in Linux/Bash, you cannot both read and write to a serial port at the same time, and so the "&lt;code&gt;Invalid argument&lt;/code&gt;" would occur in those moments when both read and write seem to happen at the same time. &lt;/p&gt;&lt;p&gt;So my questions are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Is there a way to do something like this (&lt;code&gt;cat&lt;/code&gt; a file to a serial port configured as loopback; read it back and see how long it takes) only in Bash, without resorting to writing a dedicated C program? &lt;/li&gt;&lt;li&gt;If I need a dedicated C program, any source examples out there on the net I could use? &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Thanks a lot for any responses, &lt;/p&gt;&lt;p&gt;Cheers! &lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;EDIT: I am aware that the &lt;code&gt;while&lt;/code&gt; loop written above does not exit; that command line was for preliminary testing, and I interrupt it using Ctrl-C. ( &lt;em&gt;I could in principle interrupt it with something like &lt;code&gt;timeout -9 0.1 bash -c 'while (true) do echo AA ; done'&lt;/code&gt;, but that would defeat the purpose of &lt;code&gt;time&lt;/code&gt;, then :)&lt;/em&gt; )&lt;/p&gt;&lt;p&gt;The reason that &lt;code&gt;while&lt;/code&gt; is there, is that for the time being, reading via &lt;code&gt;cat&lt;/code&gt; from the device exits immediately; at times, I &lt;em&gt;have&lt;/em&gt; set up the device, so that when &lt;code&gt;cat&lt;/code&gt; is issued, it in fact blocks and waits for incoming data; but I cannot as of yet figure what's going on (and partially that is why I'm looking for a way to test from the command line). &lt;/p&gt;&lt;p&gt;In case I didn't use the &lt;code&gt;while&lt;/code&gt;, I imagine for timing, I'd use something like:&lt;/p&gt;&lt;p&gt;&lt;code&gt;time bash -c 'comm &amp;lt;(echo "1234567890" &amp;gt; /dev/ttyUSB0) &amp;lt;(cat -A /dev/ttyUSB0)'&lt;/code&gt;&lt;/p&gt;&lt;p&gt;... however for this to be working, sort of, assumes that &lt;code&gt;cat -A /dev/ttyUSB0&lt;/code&gt; starts first and blocks; then the &lt;code&gt;echo&lt;/code&gt; writes to the serial port (and exits); and then &lt;code&gt;cat -A&lt;/code&gt; outputs whatever it read from the serial port - and then exits. (&lt;em&gt;And I'm not really sure neither if a serial port can behave this way at all, nor if &lt;code&gt;cat&lt;/code&gt; can be made to block and exit arbitrarily like that&lt;/em&gt;). &lt;/p&gt;&lt;p&gt;The exact method really doesn't matter; if at all possible, I'd just like to avoid coding my own C program to do this kind of testing - which is why my primary interest is if it is somehow possible to run such a "full-duplex test" using basic Bash/Linux (i.e. &lt;code&gt;coreutils&lt;/code&gt;); (&lt;em&gt;and if not, if there is a ready-made code I can use for something like this&lt;/em&gt;). &lt;/p&gt;]]&gt;</body><title>Serial port loopback/duplex test, in Bash or C? (process substitution)</title><lastedit>1284406661</lastedit><acceptedanswer>3708396</acceptedanswer><tags><tag id="0">c</tag><tag id="1">linux</tag><tag id="2">bash</tag><tag id="3">serial</tag><tag id="4">loopback</tag></tags></question><question id="3430445"><ownerid>277826</ownerid><creationdate>1281184519</creationdate><lastactivity>1281252071</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;I'm having this file as &lt;code&gt;data.dat&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Xstep Y1 Y2 Y3 Y4332 1.22 0.00 0.00 1.43336 5.95 12.03 6.11 10.41340 81.05 81.82 81.92 81.05394 11.76 6.16 10.46 5.87398 0.00 0.00 1.51 1.251036 0.03 0.00 0.00 0.00&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I can plot this data as histogram with this script, &lt;code&gt;hist-v1.gplot&lt;/code&gt; (using &lt;code&gt;set style data histogram&lt;/code&gt;): &lt;/p&gt;&lt;pre&gt;&lt;code&gt;set xlabel "X values"set ylabel "Occurence"set style data histogramset style histogram cluster gap 1set style fill solid border -1set term pngset output 'hist-v1.png'set boxwidth 0.9# attempt to set xtics so they are positioned numerically on x axis:set xtics ("332" 332, "336" 336, "340" 340, "394" 394, "398" 398, "1036" 1036)  # ti col reads the first entry of the column, uses it as title name plot 'data.dat' using 2:xtic(1) ti col,  '' u 3 ti col, '' u 4 ti col, '' u 5 ti col&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And by calling:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;gnuplot hist-v1.gplot &amp;amp;&amp;amp; eog hist-v1.png&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;this image is generated:&lt;img src="http://img202.imageshack.us/img202/3974/histv1.png" alt="image hist-v1.png"&gt;&lt;/p&gt;&lt;p&gt;However, you can notice that the X axis is not scaled numerically - it understands the X values as categories (i.e. it is a category axis).&lt;/p&gt;&lt;p&gt;I can get a more numerical X axis with the following script, &lt;code&gt;hist-v2.gplot&lt;/code&gt; (using &lt;code&gt;with boxes&lt;/code&gt;): &lt;/p&gt;&lt;pre&gt;&lt;code&gt;set xlabel "X values"set ylabel "Occurence"# in this case, histogram commands have no effectset style data histogramset style histogram cluster gap 1set style fill solid border -1set term pngset output 'hist-v2.png'set boxwidth 0.9set xr [330:400]# here, setting xtics makes them positioned numerically on x axis:set xtics ("332" 332, "336" 336, "340" 340, "394" 394, "398" 398, "1036" 1036)  # 1:2 will ONLY work with proper xr; since we have x&amp;gt;300; xr[0:10] generates "points y value undefined"!plot 'data.dat' using 1:2 ti col smooth frequency with boxes, '' u 1:3 ti col smooth frequency with boxes&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And by calling:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;gnuplot hist-v2.gplot &amp;amp;&amp;amp; eog hist-v2.png&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;this image is generated:&lt;img src="http://img266.imageshack.us/img266/6717/histv2.png" alt="image hist-v2.png"&gt;&lt;/p&gt;&lt;p&gt;Unfortunately, the bars 'overlap' here, so it is hard to read the graph. &lt;/p&gt;&lt;p&gt;Is there a way to keep the numerical scale X axis as in &lt;code&gt;hist-v2.png&lt;/code&gt;, but keep the 'bars' side by side with as in &lt;code&gt;hist-v1.png&lt;/code&gt;? This thread, "&lt;a href="http://newsgroups.derkeiler.com/Archive/Comp/comp.graphics.apps.gnuplot/2009-09/msg00044.html" rel="nofollow"&gt;Re: Histogram with x axis date error&lt;/a&gt;" says you cannot: &lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;But it will be hard to pull the x-coordinate date out of the data file, ...&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;but then, it refers to a different problem...&lt;/p&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;p&gt;Cheers!&lt;/p&gt;]]&gt;</body><title>Histogram with numeric x-axis in gnuplot?</title><lastedit>-1</lastedit><acceptedanswer>3432416</acceptedanswer><tags><tag id="0">axis</tag><tag id="1">numeric</tag><tag id="2">gnuplot</tag><tag id="3">histogram</tag></tags></question><question id="3311182"><ownerid>277826</ownerid><creationdate>1279816708</creationdate><lastactivity>1279957330</lastactivity><body>&lt;![CDATA[&lt;p&gt;I am having a slight problem with some structs in a kernel module I'm building, so I thought it would be nice if there was an easy way to print out structs and their values - and below is a small userland example of what I mean.&lt;/p&gt;&lt;p&gt;Say we have the simple C example as below (given in form of a bash commands):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;FN=mtestcat &amp;gt; $FN.c &amp;lt;&amp;lt;EOF#include &amp;lt;stdio.h&amp;gt; //printf#include &amp;lt;stdlib.h&amp;gt; //callocstruct person{ int age;  int height; };static struct person *johndoe;main (){ johndoe = (struct person *)calloc(1, sizeof(struct person)); johndoe-&amp;gt;age = 6;  asm("int3"); //breakpoint for gdb printf("Hello World - age: %d\n", johndoe-&amp;gt;age); free(johndoe);}EOFgcc -g -O0 $FN.c -o $FN# just a run command for gdbcat &amp;gt; ./gdbcmds &amp;lt;&amp;lt;EOFrunEOFgdb --command=./gdbcmds ./$FN &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;If we run this example, the program will compile, and gdb will run it, and automatically stop at the breakpoint. Here we can do the following:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Program received signal SIGTRAP, Trace/breakpoint trap.main () at mtest.c:2020  printf("Hello World - age: %d\n", johndoe-&amp;gt;age);(gdb) p johndoe$1 = (struct person *) 0x804b008(gdb) p (struct person)*0x804b008$2 = {age = 6, height = 0}(gdb) cContinuing.Hello World - age: 6Program exited with code 0300.(gdb) q&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;As shown, in gdb we can printout (dump?) the value of the struct pointer &lt;code&gt;johndoe&lt;/code&gt; as &lt;code&gt;{age = 6, height = 0}&lt;/code&gt; ... I would like to do the same, but directly from a C program; say as in the following example: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt; //printf#include &amp;lt;stdlib.h&amp;gt; //calloc#include &amp;lt;whatever.h&amp;gt; //for imaginary printout_structstruct person{ int age;  int height; };static struct person *johndoe;static char report[255]; main (){ johndoe = (struct person *)calloc(1, sizeof(struct person)); johndoe-&amp;gt;age = 6;  printout_struct(johndoe, report); //imaginary command printf("Hello World - age: %d\nreport: %s", johndoe-&amp;gt;age, report); free(johndoe);}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;which would result with an output like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Hello World - age: 6$2 = {age = 6, height = 0}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;So my question is - does a function like that imaginary &lt;code&gt;printout_struct&lt;/code&gt; exist - or is there another approach to make a printout like this possible? &lt;/p&gt;&lt;p&gt;Thanks in advance for any help, &lt;br/&gt;Cheers!&lt;/p&gt;]]&gt;</body><title>Linux C: Easy &amp; 'pretty' dump/printout of structs (like in gdb) - from source code?</title><lastedit>1279823413</lastedit><acceptedanswer>3312105</acceptedanswer><tags><tag id="0">c</tag><tag id="1">linux</tag><tag id="2">printing</tag><tag id="3">struct</tag><tag id="4">gdb</tag></tags></question><question id="2781297"><ownerid>277826</ownerid><creationdate>1273151202</creationdate><lastactivity>1273156479</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;I am trying to work with "&lt;i&gt;Introduction to Interprocess Communication Using Named Pipes - Full-Duplex Communication Using Named Pipes&lt;/i&gt;", &lt;a href="http://developers.sun.com/solaris/articles/named_pipes.html#5" rel="nofollow"&gt;http://developers.sun.com/solaris/articles/named_pipes.html#5&lt;/a&gt; ; in particular fd_server.c (included below for reference) &lt;/p&gt;&lt;p&gt;Here is my info and compile line: &lt;/p&gt;&lt;pre&gt;:~$ cat /etc/issueUbuntu 10.04 LTS \n \l:~$ gcc --versiongcc (Ubuntu 4.4.3-4ubuntu5) 4.4.3:~$ gcc fd_server.c -o fd_server&lt;/pre&gt;&lt;p&gt;fd_server.c creates two named pipes, one for reading and one for writing. What one can do, is: in one terminal, run the server and read (through cat) its write pipe:&lt;/p&gt;&lt;pre&gt;:~$ ./fd_server &amp; 2&gt;/dev/null [1] 11354:~$ cat /tmp/np2 &lt;/pre&gt;&lt;p&gt;and in another, write (using echo) to server's read pipe:&lt;/p&gt;&lt;pre&gt;:~$ echo "heeellloooo" &gt; /tmp/np1&lt;/pre&gt;&lt;p&gt;going back to first terminal, one can see: &lt;/p&gt;&lt;pre&gt;:~$ cat /tmp/np2 HEEELLLOOOO0[1]+  Exit 13                 ./fd_server 2&gt; /dev/null&lt;/pre&gt;&lt;p&gt;What I would like to do, is make sort of a "interactive" (or "shell"-like) session; that is, the server is run as usual, but instead of running "cat" and "echo", I'd like to use something akin to &lt;b&gt;screen&lt;/b&gt;. What I mean by that, is that screen can be called like &lt;code&gt;screen /dev/ttyS0 38400&lt;/code&gt;, and then it makes a sort of a interactive session, where what is typed in terminal is passed to /dev/ttyS0, and its response is written to terminal. Now, of course, I cannot use &lt;code&gt;screen&lt;/code&gt;, because in my case the program has two separate nodes, and as far as I can tell, &lt;code&gt;screen&lt;/code&gt; can refer to only one. &lt;/p&gt;&lt;p&gt;How would one go about to achieve this sort of "interactive" session in this context (with two separate read/write pipes)? &lt;/p&gt;&lt;p&gt;Thanks, &lt;/p&gt;&lt;p&gt;Cheers!&lt;/p&gt;&lt;p&gt;Code below:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;errno.h&amp;gt;#include &amp;lt;ctype.h&amp;gt;#include &amp;lt;sys/types.h&amp;gt;#include &amp;lt;sys/stat.h&amp;gt;#include &amp;lt;fcntl.h&amp;gt;//#include &amp;lt;fullduplex.h&amp;gt; /* For name of the named-pipe */#define NP1     "/tmp/np1"#define NP2     "/tmp/np2"#define MAX_BUF_SIZE    255#include &amp;lt;stdlib.h&amp;gt; //exit#include &amp;lt;string.h&amp;gt; //strlenint main(int argc, char *argv[]){    int rdfd, wrfd, ret_val, count, numread;    char buf[MAX_BUF_SIZE];    /* Create the first named - pipe */    ret_val = mkfifo(NP1, 0666);    if ((ret_val == -1) &amp;amp;&amp;amp; (errno != EEXIST)) {        perror("Error creating the named pipe");        exit (1);    }    ret_val = mkfifo(NP2, 0666);    if ((ret_val == -1) &amp;amp;&amp;amp; (errno != EEXIST)) {        perror("Error creating the named pipe");        exit (1);    }    /* Open the first named pipe for reading */    rdfd = open(NP1, O_RDONLY);    /* Open the second named pipe for writing */    wrfd = open(NP2, O_WRONLY);    /* Read from the first pipe */    numread = read(rdfd, buf, MAX_BUF_SIZE);    buf[numread] = '0';    fprintf(stderr, "Full Duplex Server : Read From the pipe : %sn", buf);    /* Convert to the string to upper case */    count = 0;    while (count &amp;lt; numread) {        buf[count] = toupper(buf[count]);        count++;    }    /*     * Write the converted string back to the second     * pipe     */    write(wrfd, buf, strlen(buf));}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Edit:&lt;/p&gt;&lt;p&gt;Right, just to clarify - it seems I found a document discussing something very similar, it is &lt;a href="http://en.wikibooks.org/wiki/Serial_Programming/Serial_Linux#Configuration_with_stty" rel="nofollow"&gt;http://en.wikibooks.org/wiki/Serial_Programming/Serial_Linux#Configuration_with_stty&lt;/a&gt; - a modification of the script there ("&lt;i&gt;For example, the following script configures the device and starts a background process for copying all received data from the serial device to standard output...&lt;/i&gt;") for the above program is below:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# stty raw # ( ./fd_server 2&amp;gt;/dev/null; )&amp;amp;bgPidS=$!( cat &amp;lt; /tmp/np2 ; )&amp;amp;bgPid=$!# Read commands from user, send them to deviceecho $(kill -0 $bgPidS 2&amp;gt;/dev/null ; echo $?)while [ "$(kill -0 $bgPidS 2&amp;gt;/dev/null ; echo $?)" -eq "0" ] &amp;amp;&amp;amp; read cmd; do   # redirect debug msgs to stderr, as here we're redirected to /tmp/np1   echo "$? - $bgPidS - $bgPid" &amp;gt;&amp;amp;2   echo "$cmd"   echo -e "\nproc: $(kill -0 $bgPidS 2&amp;gt;/dev/null ; echo $?)" &amp;gt;&amp;amp;2done &amp;gt;/tmp/np1echo OUT# Terminate background read process - if they still existif [ "$(kill -0 $bgPid 2&amp;gt;/dev/null ; echo $?)" -eq "0" ] ;then    kill $bgPidfiif [ "$(kill -0 $bgPidS 2&amp;gt;/dev/null ; echo $?)" -eq "0" ] ;then    kill $bgPidSfi# stty cooked&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, saving the script as say starter.sh and calling it, results with the following session: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ ./starter.sh 0i'm typing here and pressing [enter] at end0 - 13496 - 13497I'M TYPING HERE AND PRESSING [ENTER] AT END0~�.N=�(�~� �����}����@������~� [garble]proc: 0OUT&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;which is what I'd call for "interactive session" (ignoring the debug statements) - server waits for me to enter a command; it gives its output after it receives a command (and as in this case it exits after first command, so does the starter script as well). Except that, I'd like to not have buffered input, but sent character by character (meaning the above session should exit after first key press, and print out a single letter only - which is what I expected stty raw would help with, but it doesn't: it just kills reaction to both Enter and Ctrl-C :) )   &lt;/p&gt;&lt;p&gt;I was just wandering if there already is an existing command (akin to &lt;code&gt;screen&lt;/code&gt; in respect to serial devices, I guess) that would accept two such named pipes as arguments, and establish a "terminal" or "shell" like session through them; or would I have to use scripts as above and/or program own 'client' that will behave as a terminal..&lt;/p&gt;]]&gt;</body><title>Linux C: "Interactive session" with separate read and write named pipes?</title><lastedit>1273156479</lastedit><acceptedanswer>-1</acceptedanswer><tags><tag id="0">c</tag><tag id="1">pipes</tag><tag id="2">interactive</tag><tag id="3">named</tag></tags></question><question id="2780051"><ownerid>277826</ownerid><creationdate>1273138939</creationdate><lastactivity>1273141207</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;I am trying to understand &lt;a href="http://beej.us/guide/bgnet/examples/select.c" rel="nofollow"&gt;http://beej.us/guide/bgnet/examples/select.c&lt;/a&gt; (included below for reference). I am doing this: &lt;/p&gt;&lt;p&gt;&lt;code&gt;    :~$ cat /etc/issue&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Ubuntu 10.04 LTS \n \l:~$ gcc --versiongcc (Ubuntu 4.4.3-4ubuntu5) 4.4.3:~$ wget http://beej.us/guide/bgnet/examples/select.c:~$ gcc select.c -o select:~$ echo "ff" | ./select A key was pressed!:~$ ./select TYPINGTYTimed out.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;So, the select program apparently recognizes an echo piping into it as input; but it will not recognize keypresses on the terminal. Why is this? Can some sort of redirection be used (I guess, similar to how screen could 'redirect' keyboard input to a serial session) so that actual key presses in terminal are recognized?&lt;/p&gt;&lt;p&gt;Thanks, Cheers!&lt;/p&gt;&lt;p&gt;select.c:&lt;/p&gt;&lt;p&gt;&lt;code&gt;    /*    ** select.c -- a select() demo    */&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;sys/time.h&amp;gt;#include &amp;lt;sys/types.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;#define STDIN 0  // file descriptor for standard inputint main(void){ struct timeval tv; fd_set readfds; tv.tv_sec = 2; tv.tv_usec = 500000; FD_ZERO(&amp;amp;readfds); FD_SET(STDIN, &amp;amp;readfds); // don't care about writefds and exceptfds: select(STDIN+1, &amp;amp;readfds, NULL, NULL, &amp;amp;tv); if (FD_ISSET(STDIN, &amp;amp;readfds))  printf("A key was pressed!\n"); else  printf("Timed out.\n"); return 0;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Edit: see answer; thus all we need is to press enter:&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;:~$ ./select A key was pressed!&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;or we can turn off buffered input with &lt;code&gt;stty raw&lt;/code&gt; (and turn it back on with &lt;code&gt;stty cooked&lt;/code&gt;):&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;:~ stty raw:~ ./select                                             dA key was pressed!                                                               :~ stty cooked &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/code&gt;&lt;/p&gt;]]&gt;</body><title>Linux C select: piping echo to input works, but reading from keyboard doesn't?</title><lastedit>1273141207</lastedit><acceptedanswer>2780161</acceptedanswer><tags><tag id="0">c</tag><tag id="1">select</tag><tag id="2">stdin</tag><tag id="3">keypress</tag></tags></question><question id="2518833"><ownerid>277826</ownerid><creationdate>1269546212</creationdate><lastactivity>1269546914</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;Bumped into a somewhat weird problem... I want to turn the string:&lt;/p&gt;&lt;p&gt;a\left(b_{d}\right)&lt;/p&gt;&lt;p&gt;into &lt;/p&gt;&lt;p&gt;a \left( b_{d} \right)&lt;/p&gt;&lt;p&gt;in Scite using a Lua script. &lt;/p&gt;&lt;p&gt;So, I made the following Lua script for Scite: &lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;function SpaceTexEquations()  editor:BeginUndoAction()    local sel = editor:GetSelText()    local cln3 = string.gsub(sel, "\\left(", " \\left( ")    local cln4 = string.gsub(cln3, "\\right)", " \\right) ")    editor:ReplaceSel(cln4)  editor:EndUndoAction()end&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&lt;p&gt;The cln3 line works fine, however, cln4 crashes with:&lt;/p&gt;&lt;pre&gt;&lt;code&gt; /home/user/sciteLuaFunctions.lua:49: invalid pattern capture &amp;gt;Lua: error occurred while processing command&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I think this is because bracket characters () are reserved characters in Lua; but then, how come the cln3 line works without escaping? By the way I also tried:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;-- using backslash \ as escape char:local cln4 = string.gsub(cln3, "\\right\)", " \\right) ") -- crashes all the same-- using percentage sign % as escape charelocal cln4 = string.gsub(cln3, "\\right%)", " \\right) ") -- does not crash, but does not match either&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Could anyone tell me what would be the correct way to do this? &lt;/p&gt;&lt;p&gt;Thanks, &lt;/p&gt;&lt;p&gt;Cheers!&lt;/p&gt;]]&gt;</body><title>Scite Lua - escaping right bracket in regex?</title><lastedit>-1</lastedit><acceptedanswer>-1</acceptedanswer><tags><tag id="0">regex</tag><tag id="1">lua</tag><tag id="2">escaping</tag><tag id="3">scite</tag></tags></question><question id="2877110"><ownerid>236455</ownerid><creationdate>1274383710</creationdate><lastactivity>1274389961</lastactivity><body>&lt;![CDATA[&lt;p&gt;Can somebody explain to me why this works (in Python 2.5) :&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Foo(object):    passclass Bar(Foo):    passprint(Foo.__subclasses__())&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;but this doesn't :&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Foo():    passclass Bar(Foo):    passprint(Foo.__subclasses__())&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The latter returns "AttributeError: class Foo has no attribute '&lt;code&gt;__subclasses__&lt;/code&gt;'" but i'm not sure why. I know this is related to old-style vs. new-style classes but i'm not clear on why that would make this functionality unavailable. &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Clarification:&lt;/strong&gt; I'm looking to understand WHY &lt;code&gt;__subclasses__()&lt;/code&gt; isn't available in old-style, i get that the method doesn't exist for old-style classes but I don't get what it is about new-style that makes these new functions possible.&lt;/p&gt;]]&gt;</body><title>Python new-style classes and __subclasses__ function</title><lastedit>1274387366</lastedit><acceptedanswer>2877433</acceptedanswer><tags><tag id="0">python</tag></tags></question><question id="2510765"><ownerid>236455</ownerid><creationdate>1269458474</creationdate><lastactivity>1269462609</lastactivity><body>&lt;![CDATA[&lt;p&gt;I have various custom binary files stored in perforce and for many of the file types I have built a custom diff tool to show the content creators a diff of the actual changes to the file. &lt;/p&gt;&lt;p&gt;E.g. If the file holds simple key value pairs as a compressed binary blob the diff tool would load each version into an in memory format and generate a list of additions, deletions and edits to the file presented in a nice clean report view.&lt;/p&gt;&lt;p&gt;Much like the built in image diff tool in P4V i'd like to be able to use my own diff tool for certain file extensions within my depot and allow the users to use the existing P4V interface to pick revisions to diff between and examine history.&lt;/p&gt;&lt;p&gt;So, I am aware you can write add-ins to P4V but I can't find any documentation on it and I'd like to know if this kind of extension functionality is available in P4V and how to use it? &lt;/p&gt;]]&gt;</body><title>Extending Perforce to use a custom content diff tool for certain file extensions</title><lastedit>-1</lastedit><acceptedanswer>2511162</acceptedanswer><tags><tag id="0">diff</tag><tag id="1">perforce</tag><tag id="2">p4v</tag></tags></question><question id="2327678"><ownerid>236455</ownerid><creationdate>1267029267</creationdate><lastactivity>1267029812</lastactivity><body>&lt;![CDATA[&lt;p&gt;I have a simple Django app that has a variety of views of various different asset types. I have various jQuery functions that key off the asset type name and so when I generate the page using the django template I use a template variable to fill in the asset type parameter in the javascript code...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$(document).ready(function() {     $(".project").click(function() {return FiltersChanged('{{ asset_type }}', $('#filter_entry').val());});});&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I'm using this kind of paradigm a lot in the app and it seems a little awkward to me, I'm finding that i'm creating a lot of duplicate code in different template files simply because I need to fill in that {{asset_type}} variable and i'd like to be able to reduce the duplication and not need to generate that code in the template every time.&lt;/p&gt;&lt;p&gt;So, is there a better way to do this that doesn't require duplicating code in each page?&lt;/p&gt;]]&gt;</body><title>Passing parameters to the Javascript code on a page using django templates?</title><lastedit>-1</lastedit><acceptedanswer>2327727</acceptedanswer><tags><tag id="0">jquery</tag><tag id="1">django</tag><tag id="2">web-development</tag><tag id="3">web</tag></tags></question><question id="1986335"><ownerid>236455</ownerid><creationdate>1262280853</creationdate><lastactivity>1262281787</lastactivity><body>&lt;![CDATA[&lt;p&gt;I'm looking for a way to get a list of all classes that derive from a particular base class in Python. &lt;/p&gt;&lt;p&gt;More specifically I am using Django and I have a abstract base Model and then several Models that derive from that base class...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Asset(models.Model):    name = models.CharField(max_length=500)    last_update = models.DateTimeField(default=datetime.datetime.now())    category = models.CharField(max_length=200, default='None')    class Meta:        abstract = Trueclass AssetTypeA(Asset):    junk = models.CharField(max_length=200)    hasJunk =  models.BooleanField()    def __unicode__(self):        return self.junkclass AssetTypeB(Asset):    stuff= models.CharField(max_length=200)    def __unicode__(self):        return self.stuff&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I'd like to be able to detect if anyone adds a new AssetTypeX model and generate the appropriate pages but currently I am maintaining a list manually, is there a way to determine a list of class names for anything that derives from "Asset"?&lt;/p&gt;]]&gt;</body><title>Finding all classes that derive from a given base class in python</title><lastedit>-1</lastedit><acceptedanswer>1986390</acceptedanswer><tags><tag id="0">python</tag><tag id="1">django</tag></tags></question><question id="1981524"><ownerid>236455</ownerid><creationdate>1262195990</creationdate><lastactivity>1262196474</lastactivity><body>&lt;![CDATA[&lt;p&gt;I'm trying to filter a table in django based on the value of a particular field of a foreign key.&lt;/p&gt;&lt;p&gt;For example I have two models - Project and Asset, Project has a "name" field and each asset has a ForiegnKey(Project) field. I'd like to filter my asset list based on the name of the associated project.&lt;/p&gt;&lt;p&gt;Currently I am performing two queries...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;project_list = Project.objects.filter(name__contains="Foo")         asset_list = Asset.objects.filter( desc__contains=filter, project__in=project_list).order_by('desc')&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;but i'm wondering if there is a way to specify this kind of filtering in the main query?&lt;/p&gt;]]&gt;</body><title>Django - filtering on foreign key properties</title><lastedit>-1</lastedit><acceptedanswer>1981562</acceptedanswer><tags><tag id="0">django</tag><tag id="1">django-models</tag></tags></question><question id="4028353"><ownerid>103167</ownerid><creationdate>1288130101</creationdate><lastactivity>1288417494</lastactivity><body>&lt;![CDATA[&lt;p&gt;I have an application, let's call it myapp.exe, which is dual-mode console/GUI, built as /SUBSYSTEM:WINDOWS (There's a tiny 3KB shim myapp.com to cause cmd.exe to wait to display the new prompt.)&lt;/p&gt;&lt;p&gt;If I launch from a command prompt:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;myapp&lt;/code&gt; -&gt; cmd.exe runs myapp.com which runs myapp.exe.  stdout is initially a detached console, by using &lt;code&gt;AttachConsole&lt;/code&gt; and &lt;code&gt;freopen("CONOUT$", "w", stdout)&lt;/code&gt; my output appears in the command box.  OK&lt;/li&gt;&lt;li&gt;&lt;code&gt;myapp.exe&lt;/code&gt; -&gt; cmd.exe displays the prompt too early (known problem), otherwise same as previous.  Not a normal usage scenario.&lt;/li&gt;&lt;li&gt;&lt;code&gt;myapp &amp;gt; log&lt;/code&gt; -&gt; stdout is a file, normal use of &lt;code&gt;std::cout&lt;/code&gt; ends up in the file.  OK&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If I launch from Windows explorer:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;myapp.com&lt;/code&gt; -&gt; console is created, stdout is console, output goes into console.  Same result as using /SUBSYSTEM:CONSOLE for the entire program, except that I've added a pause when &lt;code&gt;myapp.com&lt;/code&gt; is the only process in the console.  Not a normal usage scenario.&lt;/li&gt;&lt;li&gt;&lt;code&gt;myapp.exe&lt;/code&gt; -&gt; stdout is a NULL handle, I detect this and hook &lt;code&gt;std::cout&lt;/code&gt; to a GUI.  OK&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If I launch from Matlab shell:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;system('myapp')&lt;/code&gt; or &lt;code&gt;system('myapp.com')&lt;/code&gt; or &lt;code&gt;system('myapp.exe')&lt;/code&gt; -&gt; For all three variations, stdout is piped to MatLab.  OK&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If I launch from a cygwin bash shell:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;./myapp.com&lt;/code&gt; -&gt; Just like launch from cmd.exe, the output appears in the command box.  OK&lt;/li&gt;&lt;li&gt;&lt;code&gt;./myapp&lt;/code&gt; -&gt; (bash finds &lt;code&gt;./myapp.exe&lt;/code&gt;).  &lt;strong&gt;This is the broken case&lt;/strong&gt;.  stdout is a non-NULL handle but output goes nowhere.  This is the normal situation for running the program from bash and needs to be fixed!&lt;/li&gt;&lt;li&gt;&lt;code&gt;./myapp &amp;gt; log&lt;/code&gt; -&gt; Just like launch from cmd.exe with file redirection.  OK&lt;/li&gt;&lt;li&gt;&lt;code&gt;./myapp | cat&lt;/code&gt; -&gt; Similar to file redirection, except output ends up on the console window.  OK&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Does anybody know what cygwin sets as stdout when launching a /SUBSYSTEM:WINDOWS process and how I can bind &lt;code&gt;std::cout&lt;/code&gt; to it?  Or at least tell me how to find out what kind of handle I'm getting back from &lt;code&gt;GetStdHandle(STD_OUTPUT_HANDLE)&lt;/code&gt;?&lt;/p&gt;&lt;p&gt;My program is written with Visual C++ 2010, without &lt;code&gt;/clr&lt;/code&gt;, in case that matters in any way.  OS is Windows 7 64-bit.&lt;/p&gt;&lt;p&gt;EDIT: Additional information requested.&lt;/p&gt;&lt;p&gt;CYGWIN environment variable is empty (or non-existent).&lt;/p&gt;&lt;p&gt;&lt;code&gt;GetFileType()&lt;/code&gt; returns &lt;code&gt;FILE_TYPE_UNKNOWN&lt;/code&gt;.  &lt;code&gt;GetLastError()&lt;/code&gt; returns &lt;code&gt;6 (ERROR_INVALID_HANDLE)&lt;/code&gt;.  It doesn't matter whether I check before or after calling &lt;code&gt;AttachConsole()&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;However, if I simply ignore the invalid handle and &lt;code&gt;freopen("CONOUT$", "w", stdout)&lt;/code&gt; then everything works great.  I was just missing a way to distinguish between (busted) console output and file redirection, and &lt;code&gt;GetFileType()&lt;/code&gt; provided that.&lt;/p&gt;&lt;p&gt;EDIT: Final code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;bool is_console(HANDLE h){    if (!h) return false;    ::AttachConsole(ATTACH_PARENT_PROCESS);    if (FILE_TYPE_UNKNOWN == ::GetFileType(h) &amp;amp;&amp;amp; ERROR_INVALID_HANDLE == GetLastError()) {        /* workaround cygwin brokenness */        h = ::CreateFile(_T("CONOUT$"), GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, NULL);        if (h) {            ::CloseHandle(h);            return true;        }    }    CONSOLE_FONT_INFO cfi;    return ::GetCurrentConsoleFont(h, FALSE, &amp;amp;cfi) != 0;}bool init( void ){    HANDLE out = ::GetStdHandle(STD_OUTPUT_HANDLE);    if (out) {        /* stdout exists, might be console, file, or pipe */        if (is_console(out)) {#pragma warning(push)#pragma warning(disable: 4996)            freopen("CONOUT$", "w", stdout);#pragma warning(pop)        }        //std::stringstream msg;        //DWORD result = ::GetFileType(out);        //DWORD lasterror = ::GetLastError();        //msg &amp;lt;&amp;lt; result &amp;lt;&amp;lt; std::ends;        //::MessageBoxA(NULL, msg.str().c_str(), "GetFileType", MB_OK);        //if (result == FILE_TYPE_UNKNOWN) {        //  msg.str(std::string());        //  msg &amp;lt;&amp;lt; lasterror &amp;lt;&amp;lt; std::ends;        //  ::MessageBoxA(NULL, msg.str().c_str(), "GetLastError", MB_OK);        //}        return true;    }    else {        /* no text-mode stdout, launch GUI (actual code removed) */    }}&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Where do writes to stdout go when launched from a cygwin shell, no redirection</title><lastedit>1288245291</lastedit><acceptedanswer>4057426</acceptedanswer><tags><tag id="0">cygwin</tag><tag id="1">stdout</tag></tags></question><question id="3569643"><ownerid>103167</ownerid><creationdate>1282765607</creationdate><lastactivity>1282914179</lastactivity><body>&lt;![CDATA[&lt;p&gt;In my copy of VS2010, stdlib.h contains (lines 353-355)&lt;/p&gt;&lt;pre&gt;&lt;code&gt;_CRTIMP __declspec(noreturn) void __cdecl exit(_In_ int _Code);_CRTIMP __declspec(noreturn) void __cdecl _exit(_In_ int _Code);_CRTIMP void __cdecl abort(void);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I find it strange that there's no &lt;code&gt;noreturn&lt;/code&gt; annotation on &lt;code&gt;abort()&lt;/code&gt;.  Does anyone know a reason for this?  Is it a bug?&lt;/p&gt;&lt;p&gt;EDIT: In VS2008, it's the same, but lines 371-373 of stdlib.h&lt;/p&gt;&lt;p&gt;The lack of the &lt;code&gt;noreturn&lt;/code&gt; annotation is triggering &lt;a href="http://msdn.microsoft.com/en-us/library/ft5xye74.aspx" rel="nofollow"&gt;error C4716&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Further reference: &lt;a href="http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1453.htm" rel="nofollow"&gt;C++0x proposal for standardization of the &lt;code&gt;noreturn&lt;/code&gt; annotation&lt;/a&gt;, which says that &lt;code&gt;abort&lt;/code&gt; should carry it.&lt;/p&gt;&lt;p&gt;EDIT: Looks like a bunch of discussion disappeared with a deleted answer, but the gist of it is covered in &lt;a href="http://www.open-std.org/jtc1/sc22/wg14/docs/rr/dr_048.html" rel="nofollow"&gt;Defect Report #048&lt;/a&gt;.&lt;/p&gt;]]&gt;</body><title>abort() is not __declspec(noreturn) in VS2010</title><lastedit>1282768005</lastedit><acceptedanswer>3584383</acceptedanswer><tags><tag id="0">c++</tag><tag id="1">c</tag><tag id="2">visual-studio-2010</tag><tag id="3">abort</tag><tag id="4">noreturn</tag></tags></question><question id="3570678"><ownerid>67022</ownerid><creationdate>1282774692</creationdate><lastactivity>1287520019</lastactivity><body>&lt;![CDATA[&lt;p&gt;Using net-snmp, table code generated by &lt;code&gt;mib2c -c mib2c.iterate.conf fooBarTable&lt;/code&gt; and then heavily hacked.&lt;/p&gt;&lt;p&gt;Unfortunately the table is defined with an Entry of 2 instead of the normal 1. (I didn't do this, I'm trying to make this fit into an existing situation.) The MIB looks something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;fooBarTable OBJECT-TYPE    SYNTAX          SEQUENCE OF FooBarEntry    MAX-ACCESS      not-accessible    STATUS          current    DESCRIPTION    "blah"    ::= { fooMIBObjects 8 }fooBarEntry OBJECT-TYPE    SYNTAX          FooBarEntry    MAX-ACCESS      not-accessible    STATUS          current    DESCRIPTION     "Stuff."    INDEX { ifIndex }    ::= { fooBarTable 2 }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When you register the table with net-snmp, you just give it an OID like "...,1,8" (i.e. up to fooBarTable, but not including the Entry). Net-snmp implicitly tacks the .1 to the table OID and then columns, indices, etc.&lt;/p&gt;&lt;p&gt;Is there a semi-supported way to force that entry value to 2? (I.e. without resorting to hacking the bits out of the objects that are passed in to the handler.)&lt;/p&gt;]]&gt;</body><title>net-snmp: force table to have xxEntry value of 2 instead of 1</title><lastedit>-1</lastedit><acceptedanswer>3972462</acceptedanswer><tags><tag id="0">snmp</tag><tag id="1">mibs</tag><tag id="2">net-snmp</tag></tags></question><question id="3937164"><ownerid>67022</ownerid><creationdate>1287087266</creationdate><lastactivity>1287231615</lastactivity><body>&lt;![CDATA[&lt;p&gt;I'm trying to get buildbot running on centos5, and getting the following error:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  File "/usr/lib/python2.4/site-packages/buildbot/status/mail.py", line 14, in ?    from twisted.mail.smtp import sendmail, ESMTPSenderFactoryImportError: No module named mail.smtp&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I have the following twisted packages installed (and don't see anything else relevant to install):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ rpm -qa | grep twistedpython-twisted-web-0.7.0-1.el5python-twisted-core-2.5.0-4.el5python-twisted-words-0.5.0-3.el5&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I'm more familiar with debian where I can do:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ apt-file find twisted/mail/smtppython-twisted-mail: /usr/share/pyshared/twisted/mail/smtp.py&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Two questions:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Is there something I can pull from yum that will provide this file or do I need to resort to manual tactics for this part of twisted?&lt;/li&gt;&lt;li&gt;Is there anything analogous to the &lt;code&gt;apt-file&lt;/code&gt; command above for rpm/yum-based systems?&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Thanks.&lt;/p&gt;&lt;p&gt;(I considered superuser, but this seems so tightly coupled to programming that I expect better answers here...)&lt;/p&gt;]]&gt;</body><title>twisted on centos missing mail.smtp?</title><lastedit>-1</lastedit><acceptedanswer>3948859</acceptedanswer><tags><tag id="0">python</tag><tag id="1">twisted</tag><tag id="2">centos</tag><tag id="3">rpm</tag></tags></question><question id="3875122"><ownerid>67022</ownerid><creationdate>1286385121</creationdate><lastactivity>1286906380</lastactivity><body>&lt;![CDATA[&lt;p&gt;I have the following minimal source file:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ cat path/xx/yy/fooBar.c void this_is_a_test(void){}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If I run etags like this it works ok:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ etags path/xx/yy/fooBar.c $ cat TAGS path/xx/yy/fooBar.c,25void this_is_a_test(1,0&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But if I run etags via find/xargs the TAGS file is corrupted:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ find . -name fooBar.c./path/xx/yy/fooBar.c$ find . -name fooBar.c | xargs etags$ cat TAGSpath/xx/yy/fBoBar.c,25void this_is_a_test(^?1,0&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note the filename shows up above as fBoBar.c -- bogus!&lt;/p&gt;&lt;p&gt;I like to be able to generate TAGS by doing something like &lt;code&gt;find . -name '*.[ch]' | xargs etags&lt;/code&gt;. But it is corrupting most of the filenames when I do this.&lt;/p&gt;&lt;p&gt;Any idea why it is failing like this, and/or what I can do to make it work?&lt;/p&gt;&lt;p&gt;Ubuntu Lucid. Etags is from emacs23-bin-common 23.1+1-4ubuntu7.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;In response to fschmitt's question:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ etags $(find . -name fooBar.c)$ cat TAGS path/xx/yy/fBoBar.c,25void this_is_a_test(1,0&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;New info&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;I just noticed that the difference between the two uses in my original question above is the leading &lt;code&gt;.&lt;/code&gt; on the path. And if I call etags like &lt;code&gt;etags ./path/xx/yy/fooBar.c&lt;/code&gt;, it corrupts the file. So a workaround is to make sure the args to etags don't have leading tags. (Perhaps this is a bug in etags, because the documentation describes my usage pattern almost exactly.)&lt;/p&gt;]]&gt;</body><title>why is etags generating a corrupted TAGS file?</title><lastedit>1286387121</lastedit><acceptedanswer>3917593</acceptedanswer><tags><tag id="0">emacs</tag><tag id="1">tags</tag><tag id="2">etag</tag></tags></question><question id="3884110"><ownerid>67022</ownerid><creationdate>1286471786</creationdate><lastactivity>1286471786</lastactivity><body>&lt;![CDATA[&lt;p&gt;I can test this to find the behavior but that's not the point. In &lt;a href="http://stackoverflow.com/questions/3882379/how-to-interrupt-a-fread-call/3883457#3883457"&gt;my answer&lt;/a&gt; to another question, a commenter recommended closing a monitored fd from another thread to wake up &lt;code&gt;select&lt;/code&gt;. Another commenter couldn't find a reference to this behavior in the standard, and I can't find one either.&lt;/p&gt;&lt;p&gt;Can someone provide a pointer to the standard on this behavior?&lt;/p&gt;]]&gt;</body><title>What is select supposed to do if you close a monitored fd?</title><lastedit>-1</lastedit><acceptedanswer>-1</acceptedanswer><tags><tag id="0">select</tag><tag id="1">posix</tag></tags></question><question id="3756374"><ownerid>67022</ownerid><creationdate>1285026614</creationdate><lastactivity>1285441096</lastactivity><body>&lt;![CDATA[&lt;p&gt;I'm running a command line like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;filename_listing_command | xargs -0 action_command&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Where &lt;code&gt;filename_listing_command&lt;/code&gt; uses null bytes to separate the files -- this is what &lt;code&gt;xargs -0&lt;/code&gt; wants to consume.&lt;/p&gt;&lt;p&gt;Problem is that I want to filter out some of the files. Something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;filename_listing_command | sed -e '/\.py/!d' | xargs ac&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;but I need to use &lt;code&gt;xargs -0&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;How do I change the line separator that sed wants from newline to NUL?&lt;/p&gt;]]&gt;</body><title>Change sed line separator to NUL to act as "xargs -0" prefilter?</title><lastedit>-1</lastedit><acceptedanswer>3756732</acceptedanswer><tags><tag id="0">sed</tag><tag id="1">xargs</tag></tags></question><question id="3757500"><ownerid>67022</ownerid><creationdate>1285046528</creationdate><lastactivity>1285046887</lastactivity><body>&lt;![CDATA[&lt;p&gt;I want to use &lt;a href="http://sphinx.pocoo.org/ext/autodoc.html#event-autodoc-skip-member" rel="nofollow"&gt;sphinx's autodoc-skip-member&lt;/a&gt; event to select a portion of the members on a certain python class for documentation.&lt;/p&gt;&lt;p&gt;But it isn't clear from the sphinx docs, and I can't find any examples that illustrate: where do I put the code to connect this? I see &lt;a href="http://sphinx.pocoo.org/ext/appapi.html#sphinx.application.Sphinx.connect" rel="nofollow"&gt;Sphinx.connect&lt;/a&gt; and I suspect it goes in my conf.py, but when I try variations on this code in conf.py I can't find the app object that I should connect():&lt;/p&gt;&lt;pre&gt;&lt;code&gt;def maybe_skip_member(app, what, name, obj, skip,                                  options):    print app, what, name, obj, skip, options    return False# This is not even close to correct:#from sphinx.application import Sphinx#Sphinx().connect('autodoc-skip-member', maybe_skip_member)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A pointer to a simple example would be ideal.&lt;/p&gt;]]&gt;</body><title>How do I connect sphinx's autodoc-skip-member to my function?</title><lastedit>-1</lastedit><acceptedanswer>3757526</acceptedanswer><tags><tag id="0">python</tag><tag id="1">sphinx</tag></tags></question><question id="3737740"><ownerid>67022</ownerid><creationdate>1284746185</creationdate><lastactivity>1284750388</lastactivity><body>&lt;![CDATA[&lt;p&gt;I occasionally run a bash command line like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;n=0; while [[ $n -lt 10 ]]; do some_command; n=$((n+1)); done&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To run &lt;code&gt;some_command&lt;/code&gt; a number of times in a row -- 10 times in this case.&lt;/p&gt;&lt;p&gt;Often &lt;code&gt;some_command&lt;/code&gt; is really a chain of commands or a pipeline.&lt;/p&gt;&lt;p&gt;Is there a more concise way to do this?&lt;/p&gt;]]&gt;</body><title>Is there a better way to run a command N times in bash?</title><lastedit>-1</lastedit><acceptedanswer>3737773</acceptedanswer><tags><tag id="0">bash</tag></tags></question><question id="3714321"><ownerid>67022</ownerid><creationdate>1284518601</creationdate><lastactivity>1284518601</lastactivity><body>&lt;![CDATA[&lt;p&gt;I'm looking for a library or tool to decode FSK in wav files, e.g. caller id.&lt;/p&gt;&lt;p&gt;Currently using the tools bundled with vpb-driver for Voicetronix hardware that is available via debian/ubuntu. But this appears to have an error that I'm trying to debug -- a second tool to validate the audio file would be useful.&lt;/p&gt;&lt;p&gt;I'm &lt;strong&gt;not&lt;/strong&gt; looking for any of the myriad tools that read caller id data from a modem or other hardware device -- I need pure software.&lt;/p&gt;]]&gt;</body><title>Open source FSK decoder library?</title><lastedit>-1</lastedit><acceptedanswer>-1</acceptedanswer><tags><tag id="0">audio</tag><tag id="1">telephony</tag><tag id="2">audio-processing</tag></tags></question><question id="3705306"><ownerid>67022</ownerid><creationdate>1284422990</creationdate><lastactivity>1284423510</lastactivity><body>&lt;![CDATA[&lt;p&gt;I have a list of &lt;code&gt;Thing&lt;/code&gt; and a &lt;code&gt;Controller&lt;/code&gt; that I want to &lt;code&gt;notify()&lt;/code&gt; with each of the things. The code below works:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;tr1/functional&amp;gt;#include &amp;lt;list&amp;gt;using namespace std;class Thing { public: int x; };class Controller{public:    void notify(Thing&amp;amp; t) { cerr &amp;lt;&amp;lt; t.x &amp;lt;&amp;lt; endl; }};class Notifier{public:    Notifier(Controller* c) { _c = c; }    void operator()(Thing&amp;amp; t) { _c-&amp;gt;notify(t); }private:    Controller* _c;};int main(){    list&amp;lt;Thing&amp;gt; things;    Controller c;    // ... add some things ...    Thing t;    t.x = 1; things.push_back(t);    t.x = 2; things.push_back(t);    t.x = 3; things.push_back(t);    // This doesn't work:    //for_each(things.begin(), things.end(),    //         tr1::mem_fn(&amp;amp;Controller::notify));    for_each(things.begin(), things.end(), Notifier(&amp;amp;c));    return 0;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;My question is: can I get rid of the &lt;code&gt;Notifier&lt;/code&gt; class by using some version of the "This doesn't work" line? Seems like I should be able to make something work, but can't quite get the right combination. (I've fumbled around with a number of different combinations.)&lt;/p&gt;&lt;p&gt;Without using boost? (I would if I could.) I'm using g++ 4.1.2, yes I know it is old...&lt;/p&gt;]]&gt;</body><title>Call c++ member function with each element in a list?</title><lastedit>-1</lastedit><acceptedanswer>3705322</acceptedanswer><tags><tag id="0">c++</tag><tag id="1">stl</tag><tag id="2">tr1</tag></tags></question><question id="3603602"><ownerid>67022</ownerid><creationdate>1283196898</creationdate><lastactivity>1283197152</lastactivity><body>&lt;![CDATA[&lt;p&gt;I'm learning haskell. Currently working through &lt;a href="http://haskell.org/haskellwiki/99_questions/1_to_10" rel="nofollow"&gt;99 questions&lt;/a&gt;, a little bit stuck on #7:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;Problem 7  (**) Flatten a nested list structure.&lt;/p&gt;    &lt;p&gt;Transform a list, possibly holding lists as elements into a `flat' list by replacing each list with its elements (recursively).&lt;/p&gt;    &lt;p&gt;Example in Haskell:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;*Main&amp;gt; flatten (Elem 5)[5]*Main&amp;gt; flatten (List [Elem 1, List [Elem 2, List [Elem 3, Elem 4], Elem 5]])[1,2,3,4,5]*Main&amp;gt; flatten (List [])[]&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;p&gt;Where do &lt;code&gt;Elem&lt;/code&gt; and &lt;code&gt;List&lt;/code&gt; come from? What do I have to do to be able to use them in my program? (Or does the question assume that I have to define a new type for these -- if that's the answer I'll go off and reread that section of the tutorial...)&lt;/p&gt;]]&gt;</body><title>haskell: 99 questions #7: heterogeneous list</title><lastedit>-1</lastedit><acceptedanswer>3603631</acceptedanswer><tags><tag id="0">haskell</tag></tags></question><question id="3504166"><ownerid>67022</ownerid><creationdate>1282059055</creationdate><lastactivity>1282059319</lastactivity><body>&lt;![CDATA[&lt;p&gt;Assume a MIB contains a table indexed by MAC address. What's the correct behavior by the agent when a manager requests &lt;code&gt;myTable.0.1&lt;/code&gt;? This is an incomplete index.&lt;/p&gt;&lt;p&gt;Some possibilities that I see:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Return the first row in the table -- treat this partial index as coming before the first row.&lt;/li&gt;&lt;li&gt;Treat this as a subtree -- return rows in the table that match this MAC prefix.&lt;/li&gt;&lt;li&gt;Return no rows -- treat this as coming after the last row in the table.&lt;/li&gt;&lt;li&gt;Return some kind of error?&lt;/li&gt;&lt;/ol&gt;]]&gt;</body><title>snmp: correct behavior when only part of a table index is given?</title><lastedit>-1</lastedit><acceptedanswer>3504202</acceptedanswer><tags><tag id="0">snmp</tag><tag id="1">mibs</tag></tags></question><question id="3392392"><ownerid>67022</ownerid><creationdate>1280789342</creationdate><lastactivity>1280816505</lastactivity><body>&lt;![CDATA[&lt;p&gt;I don't want to end up with &lt;a href="http://stackoverflow.com/questions/2353804/list-git-branches-that-can-safely-be-deleted"&gt;82 feature branches hanging around&lt;/a&gt;, so I'm wondering what the potential drawbacks are to simply deleting the feature branch as soon as I merge it to master.&lt;/p&gt;&lt;p&gt;Workflow:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git co -b feat-xyzhack hackgit cihack some moregit cigit co mastergit merge feat-xyzsmoke testgit br -d feat-xyz&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Any issues here?&lt;/p&gt;]]&gt;</body><title>When is the right time to delete a git feature branch?</title><lastedit>-1</lastedit><acceptedanswer>3392942</acceptedanswer><tags><tag id="0">git</tag><tag id="1">branch</tag></tags></question><question id="3332045"><ownerid>67022</ownerid><creationdate>1280114874</creationdate><lastactivity>1280507763</lastactivity><body>&lt;![CDATA[&lt;p&gt;I've got a script like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/bin/bashexec /usr/bin/some_binary &amp;gt; /tmp/my.log 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Problem is that &lt;code&gt;some_binary&lt;/code&gt; sends all of its logging to stdout, and buffering makes it so that I only see output in chunks of a few lines. This is annoying when something gets stuck and I need to see what the last line says.&lt;/p&gt;&lt;p&gt;Is there any way to make stdout unbuffered before I do the exec that will affect some_binary so it has more useful logging?&lt;/p&gt;&lt;p&gt;(The wrapper script is only setting a few environment variables before the exec, so a solution in perl or python would also be feasible.)&lt;/p&gt;&lt;p&gt;Thanks.&lt;/p&gt;]]&gt;</body><title>bash: force exec'd process to have unbuffered stdout</title><lastedit>-1</lastedit><acceptedanswer>3332061</acceptedanswer><tags><tag id="0">bash</tag><tag id="1">logging</tag><tag id="2">exec</tag><tag id="3">unbuffered-output</tag></tags></question><question id="3365845"><ownerid>67022</ownerid><creationdate>1280428404</creationdate><lastactivity>1280428721</lastactivity><body>&lt;![CDATA[&lt;p&gt;I've done this before by creating a clone and doing the rebase in the clone, but I suspect I could do it safely on a separate branch.&lt;/p&gt;&lt;p&gt;I have a feature branch &lt;code&gt;feat-x&lt;/code&gt; with about 25 commits on it. I'd like to (safely) squash several of these together.&lt;/p&gt;&lt;p&gt;(I say "safely" because the first couple of times I squashed I didn't get it right -- but was working in a clone so just threw it away until I figured out the right incantation.)&lt;/p&gt;&lt;p&gt;What sequence of commands will give me &lt;code&gt;feat-x-exp&lt;/code&gt; that is a copy of &lt;code&gt;feat-x&lt;/code&gt; so I can experiment with squashing without disturbing &lt;code&gt;feat-x&lt;/code&gt;?&lt;/p&gt;]]&gt;</body><title>How do I make a copy of a branch for testing rebase?</title><lastedit>-1</lastedit><acceptedanswer>3365887</acceptedanswer><tags><tag id="0">git</tag><tag id="1">branch</tag><tag id="2">rebase</tag><tag id="3">squash</tag></tags></question><question id="3251550"><ownerid>67022</ownerid><creationdate>1279152638</creationdate><lastactivity>1279628565</lastactivity><body>&lt;![CDATA[&lt;p&gt;In a C program I can write argv[0] and the new name shows up in a ps listing.&lt;/p&gt;&lt;p&gt;How can I do this in bash?&lt;/p&gt;]]&gt;</body><title>How to change argv0 in bash so command shows up with different name in ps?</title><lastedit>-1</lastedit><acceptedanswer>3289825</acceptedanswer><tags><tag id="0">bash</tag></tags></question><question id="3261690"><ownerid>67022</ownerid><creationdate>1279250270</creationdate><lastactivity>1279250270</lastactivity><body>&lt;![CDATA[&lt;p&gt;We've got an "appliance", based on ubuntu that has some of our own apps running on it (which are distributed as .deb).&lt;/p&gt;&lt;p&gt;Logging is sent through syslog. Syslog.conf is customized so that our apps' messages get sent to a dedicated file.&lt;/p&gt;&lt;p&gt;Are there any gotchas/best practices I should know about in terms of programmatically modifying syslog.conf from the installer scripts and/or administrative configuration scripts? It doesn't support "conf.d" style configuration and I'd like to avoid stomping on existing config.&lt;/p&gt;&lt;p&gt;Thanks.&lt;/p&gt;]]&gt;</body><title>What to watch out for when modifying syslog.conf?</title><lastedit>-1</lastedit><acceptedanswer>-1</acceptedanswer><tags><tag id="0">linux</tag><tag id="1">ubuntu</tag><tag id="2">configuration-files</tag><tag id="3">syslog</tag></tags></question><question id="3233174"><ownerid>67022</ownerid><creationdate>1278978881</creationdate><lastactivity>1278981165</lastactivity><body>&lt;![CDATA[&lt;p&gt;valgrind is reporting uninitialized memory errors from code like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;unsigned char buf[100];struct driver_command cmd;cmd.len = sizeof(buf);cmd.buf = buf;ioctl(my_driver_fd, READ, &amp;amp;cmd);for(i = 0; i &amp;lt; sizeof(buf); i++){    foo(buf[i]); /* &amp;lt;&amp;lt;--- uninit use error from valgrind */}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If I memset() the buf before the driver call, the error goes away.&lt;/p&gt;&lt;p&gt;Can valgrind detect whether the linux driver is properly writing to the buffer? (I looked at the driver code, and it seems to be correct, but maybe I'm missing something.)&lt;/p&gt;&lt;p&gt;Or does it just pass the driver call through and has no way of knowing that the buffer has been written inside the kernel?&lt;/p&gt;&lt;p&gt;Thanks.&lt;/p&gt;]]&gt;</body><title>Does valgrind track memory initialization through drivers?</title><lastedit>-1</lastedit><acceptedanswer>3233242</acceptedanswer><tags><tag id="0">c</tag><tag id="1">linux</tag><tag id="2">driver</tag><tag id="3">valgrind</tag><tag id="4">uninitialized</tag></tags></question><question id="2722168"><ownerid>67022</ownerid><creationdate>1272379432</creationdate><lastactivity>1272392562</lastactivity><body>&lt;![CDATA[&lt;p&gt;I want to do the inverse of &lt;a href="http://stackoverflow.com/questions/1155578/which-program-creates-a-c-array-given-any-file"&gt;this question&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;I am embedding a file into an executable as an array, and I would later like to extract the embedded file from the executable.&lt;/p&gt;&lt;p&gt;It seems like objcopy might be useful here but I haven't figured out the proper incantation yet.&lt;/p&gt;&lt;p&gt;&lt;em&gt;(Edit: clarify question, I somehow removed the crux of it in editing originally...)&lt;/em&gt;&lt;/p&gt;]]&gt;</body><title>How can I extract an array from an executable file?</title><lastedit>1272380314</lastedit><acceptedanswer>2723862</acceptedanswer><tags><tag id="0">c</tag><tag id="1">arrays</tag><tag id="2">objcopy</tag></tags></question><question id="1504729"><ownerid>67022</ownerid><creationdate>1254411768</creationdate><lastactivity>1254413226</lastactivity><body>&lt;![CDATA[&lt;p&gt;I have an "appliance" (for lack of better description) running linux.&lt;/p&gt;&lt;p&gt;Currently I ssh into the box to launch jobs. This isn't friendly enough for my users, so I'm putting together a simple web UI to launch the script. A job runs for anywhere from 10 seconds to several hours. The web UI needs to reflect the status of the job.&lt;/p&gt;&lt;p&gt;I've solved similar problems in the past by running a daemon on the server that watches a spool directory (or db table) for new job requests, spawns a process, monitors the process, and provides info for the web UI in a db table or status file. The web UI then drops job requests into a spool dir (db) and occasionally check the status file (db). This might be overkill for this task.&lt;/p&gt;&lt;p&gt;For the current task, I am considering spawning the job from the cgi and occasionally checking a status file that the job writes as it progresses or exits.&lt;/p&gt;&lt;p&gt;My question: is there a better (simpler/faster-to-write/more robust) way to do this? Are there existing patterns or tools that I should know about?&lt;/p&gt;&lt;p&gt;(Python solutions are ideal.)&lt;/p&gt;&lt;p&gt;Thanks.&lt;/p&gt;]]&gt;</body><title>Communicate with backend job from web server or web page</title><lastedit>-1</lastedit><acceptedanswer>1504890</acceptedanswer><tags><tag id="0">python</tag><tag id="1">linux</tag><tag id="2">web</tag><tag id="3">backend</tag></tags></question><question id="1475193"><ownerid>67022</ownerid><creationdate>1253846991</creationdate><lastactivity>1253883412</lastactivity><body>&lt;![CDATA[&lt;p&gt;My class contains a socket that connects to a server. Some of the methods of the class can throw an exception. The script I'm running contains an outer loop that catches the exception, logs an error, and creates a new class instance that tries to reconnect to the server.&lt;/p&gt;&lt;p&gt;Problem is that the server only handles one connection at a time (by design) and the "old" socket is still connected. So the new connection attempt hangs the script. I can work around this by forcing the old socket closed, but I wonder: why doesn't the socket automatically close?&lt;/p&gt;&lt;p&gt;When it is "stuck", netstat shows two sockets connected to the port. The server is waiting for input from the first socket though, it isn't handling the new one yet.&lt;/p&gt;&lt;p&gt;I run this against a dummy server that replies "error\n" to every incoming line.&lt;/p&gt;&lt;p&gt;EDIT: see my comment on &lt;a href="http://stackoverflow.com/questions/1475193/what-happens-to-a-python-object-when-you-throw-an-exception-from-it/1475198#1475198"&gt;Mark Rushakoff's answer below&lt;/a&gt;. An assert(False) [that I subsequently catch] from within the exception handler seems to force the socket closed.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import socketclass MyException(Exception):    passclass MyClient(object):    def __init__(self, port):        self.sock = socket.create_connection(('localhost', port))        self.sockfile = self.sock.makefile()    def do_stuff(self):        self._send("do_stuff\n")        response = self._receive()        if response != "ok\n":            raise MyException()        return response    def _send(self, cmd):        self.sockfile.write(cmd)        self.sockfile.flush()    def _receive(self):        return self.sockfile.readline()def connect():    c = MyClient(9989)    # On the second iteration, do_stuff() tries to send data and    # hangs indefinitely.    print c.do_stuff()if __name__ == '__main__':    for _ in xrange(3):        try:            connect()        except MyException, e:            print 'Caught:', e            # This would be the workaround if I had access to the            # MyClient object:            #c.sock.close()            #c.sockfile.close()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EDIT: Here's the (ugly) server code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import sockets = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)s.bind(('localhost', 9989))s.listen(5)(c,a) = s.accept()f = c.makefile()print f.readline()f.write('error\n')f.flush()(c2,a) = s.accept()f = c.makefile()print f.readline()s.close()&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>what happens to a python object when you throw an exception from it</title><lastedit>1253847640</lastedit><acceptedanswer>1475198</acceptedanswer><tags><tag id="0">python</tag><tag id="1">exception</tag><tag id="2">garbage-collection</tag><tag id="3">sockets</tag></tags></question><question id="1203295"><ownerid>67022</ownerid><creationdate>1248904529</creationdate><lastactivity>1248923601</lastactivity><body>&lt;![CDATA[&lt;p&gt;I'm trying to provide integration to my django application from subversion through the post commit hook.&lt;/p&gt;&lt;p&gt;I have a django test case (a subclass of unittest.TestCase) that (a) inserts a couple of records into a table, (b) spawns an svn commit, (c) svn commit runs a hook that uses my django model to look up info.&lt;/p&gt;&lt;p&gt;I'm using an sqlite3 db. The test is &lt;em&gt;not&lt;/em&gt; using the :memory: db, it is using a real file. I have modified the django test code (for debugging this issue) to avoid deleting the test db when it is finished so I can inspect it.&lt;/p&gt;&lt;p&gt;The test code dumps model.MyModel.objects.all() and the records are there between (a) and (b).&lt;/p&gt;&lt;p&gt;When the hook fires at (c) it also dumps the model and there are no records. When I inspect the db manually after the test runs, there are no records.&lt;/p&gt;&lt;p&gt;Is there something going on in the django test framework that isn't commiting the records to the db file?&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To clarify&lt;/strong&gt;: (d) end the test case. Thus the svn commit hook is run before the test case terminates, and before any django db cleanup code &lt;em&gt;should&lt;/em&gt; be run.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Extra info&lt;/strong&gt;: I added a 15 second delay between (b) and (b) so that I could examine the db file manually in the middle of the test. The records aren't in the file.&lt;/p&gt;]]&gt;</body><title>can't see records inserted by django test case</title><lastedit>1248923601</lastedit><acceptedanswer>1203379</acceptedanswer><tags><tag id="0">python</tag><tag id="1">django</tag><tag id="2">testing</tag><tag id="3">sqlite</tag></tags></question><question id="1201094"><ownerid>67022</ownerid><creationdate>1248881152</creationdate><lastactivity>1248882295</lastactivity><body>&lt;![CDATA[&lt;p&gt;If I derive a class from ctypes.BigEndianStructure, pylint warns if I don't call BigEndianStructure.&lt;strong&gt;init&lt;/strong&gt; (). Great, but if I fix my code, pylint still warns:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import ctypesclass Foo(ctypes.BigEndianStructure):    def __init__(self):        ctypes.BigEndianStructure.__init__(self)$ pylint mymodule.pyC:  1: Missing docstringC:  3:Foo: Missing docstringW:  4:Foo.__init__: __init__ method from base class 'Structure' is not calledW:  4:Foo.__init__: __init__ method from base class 'BigEndianStructure' is not calledR:  3:Foo: Too few public methods (0/2)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At first I thought this was because Structure comes from a C module. I don't get the warning if I subclass from one of my classes or, say, SocketServer.BaseServer which is pure python. But I also don't get the warning if I subclass from smbus.SMBus, which is in a C module.&lt;/p&gt;&lt;p&gt;Anyone know of a workaround other than disabling W0231?&lt;/p&gt;]]&gt;</body><title>pylint false positive for superclass __init__</title><lastedit>-1</lastedit><acceptedanswer>1201213</acceptedanswer><tags><tag id="0">python</tag><tag id="1">pylint</tag></tags></question><question id="647257"><ownerid>67022</ownerid><creationdate>1237088793</creationdate><lastactivity>1248854232</lastactivity><body>&lt;![CDATA[&lt;p&gt;I am new to Satchmo -- picked it up because I needed payment processing for site subscriptions and physical product.&lt;/p&gt;&lt;p&gt;My site will have two classes of users: paid subscribers and free users. Both can order a physical product. Paid subscribers get an automatic discount on all orders.&lt;/p&gt;&lt;p&gt;I don't see a configuration for this in the admin. (Discount looks like it would apply to all users. If I'm missing something here, let me know.)&lt;/p&gt;&lt;p&gt;So what's the best place to automatically override the price depending on the user class? The displayed price should show up, say, 10% less for subscribers everywhere in the site, not just at the checkout.&lt;/p&gt;&lt;p&gt;Thanks.&lt;/p&gt;]]&gt;</body><title>Provide discount to preferred customer with Satchmo?</title><lastedit>-1</lastedit><acceptedanswer>1198670</acceptedanswer><tags><tag id="0">python</tag><tag id="1">django</tag><tag id="2">satchmo</tag></tags></question><question id="4045914"><ownerid>430719</ownerid><creationdate>1288289671</creationdate><lastactivity>1288297530</lastactivity><body>&lt;![CDATA[&lt;p&gt;For my work, I sometimes have to deal with logfiles from a binary protocol (the logfiles contain hexdumps of the messages). I want to write a Perl script that can interpret the binary data for me and print the contents in a more friendly format.&lt;/p&gt;&lt;p&gt;I have a (machine readable) description of the protocol messages in a proprietary format and I have (mostly) figured out how to parse that format (the parts I can"t fully understand are not related to my goal, so I can just ignore them), so I can convert the description into a data structure for use in my script.&lt;/p&gt;&lt;p&gt;Because the protocol description only rarely changes, it seems a waste to re-parse the protocol description each time I want to analyse a logfile, but on the other hand, if the description does change or if I accidentally throw away my pre-parsed form of the description, then I would like my script to automatically trigger a re-parsing of the description.&lt;br&gt;What is the best way to realise this?&lt;/p&gt;]]&gt;</body><title>Using a pre-parsed protocol definition in a script and keeping it up-to-date</title><lastedit>-1</lastedit><acceptedanswer>4046891</acceptedanswer><tags><tag id="0">perl</tag><tag id="1">perl-data-structures</tag><tag id="2">intermediate-code</tag></tags></question></questions><answers><answer id="4120453"><ownerid>277826</ownerid><questionid>4119991</questionid><creationdate>1289175652</creationdate><lastactivity>1289175652</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;Ok, not really an answer, but I'd just like to summarize the comments I got so far, which are useful for my problem. However, the question as it stands - in respect to bash keyboard shortcuts running arbitrary scripts - is still not answered (&lt;em&gt;I'd still prefer doing all this with a single key combo :)&lt;/em&gt;)&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;br&gt;First, I can use a 'global' script like: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ sudo bash -c 'cat &amp;gt; /usr/bin/bpwd &amp;lt;&amp;lt;EOF#!/bin/bashbasepwd=\$(basename \$(pwd))echo -n \$basepwd                 # suppress line ending# exec 1&amp;gt;/dev/null               # debug: redir stdout to nullecho -n \$basepwd | xsel -i -b    # suppress LF, and make xsel read from stdin # exec 1&amp;gt;/dev/tty                # debug: restore stdoutEOFchmod +x /usr/bin/bpwd'&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or, I can add &lt;code&gt;bash&lt;/code&gt; functions to my &lt;code&gt;.bashrc&lt;/code&gt; (&lt;em&gt;note: make sure you reload &lt;code&gt;bash&lt;/code&gt; after you add these lines to &lt;code&gt;.bashrc&lt;/code&gt; - for example, simply by typing &lt;code&gt;bash&lt;/code&gt; in your current terminal&lt;/em&gt;):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ echo 'bpwd2() { basepwd=${PWD##*/} ; echo -n $basepwd | xsel -i -b ; echo -n $basepwd ; }svnci-test() { echo -n "$(bpwd2): $*" ; }svnci-m() { svn ci -m "$(bpwd2): $*" ; }' &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;br&gt;Basically, I misunderstood Reese Moore's suggestion originally - you can indeed use backticks - consider this command session (&lt;em&gt;after the above commands have been ran&lt;/em&gt;):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ bpwdDesktop\$ bpwd2Desktop\$ echo `bpwd`Desktop$ echo "`bpwd2` 2"Desktop 2&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is what I needed to understand Moore's "&lt;em&gt;the output from the backticked commands will be used as input on the executed command&lt;/em&gt;" (however, one also needs to take care to clean the line endings from the output); or, in my case, I can call&lt;/p&gt;&lt;pre&gt;&lt;code&gt;svn ci -m "`bpwd`: my message here"# svn ci -m "${PWD##*/}: my message here" # alternatively&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... or, I could follow camh's suggestion, and use &lt;code&gt;svnci-m&lt;/code&gt; as a function (&lt;em&gt;in my case, I almost never use additional arguments to &lt;code&gt;svn ci&lt;/code&gt;, and so my version is slightly different&lt;/em&gt;). And to test whether arguments are passed correctly, I can use the &lt;code&gt;svnci-test&lt;/code&gt; function:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ svnci-test "my message"Desktop: my message\&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;br&gt;Thanks for the comments so far,&lt;br&gt;Cheers!&lt;/p&gt;]]&gt;</body><title>Bash: call script with customized keyboard shortcuts?</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="4036844"><ownerid>277826</ownerid><questionid>4036743</questionid><creationdate>1288207201</creationdate><lastactivity>1288207201</lastactivity><body>&lt;![CDATA[&lt;p&gt;Pfffft.... syntax error - forgot &lt;code&gt;then&lt;/code&gt; at end: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;if fchars == "//" or fchars == "##" then  print "got it"end &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Cheers!&lt;/p&gt;]]&gt;</body><title>Scite Lua: string comparison raises "attempt to call a string value"?</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="3941502"><ownerid>277826</ownerid><questionid>3940973</questionid><creationdate>1287139603</creationdate><lastactivity>1287139603</lastactivity><body>&lt;![CDATA[&lt;p&gt;Oh, well - that wasn't trivial at all, but here is a solution: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; SELECT * FROM names AS n1         LEFT OUTER JOIN (             SELECT d1.*             FROM datas AS d1, (                 SELECT max(countdata) as countdata,name_id                 FROM datas                 GROUP BY name_id                ) AS ttemp             WHERE d1.name_id = ttemp.name_id AND d1.countdata = ttemp.countdata         ) AS p1 ON n1.n_id=p1.name_id;n1.n  n1.name       p1.d_id     p1.name_id  p1.countdata                       ----  ------------  ----------  ----------  -----------------------------------1     nameA         2           1           47                                 2     nameB         5           2           87                                 &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;/p&gt;&lt;p&gt;Well, hope this ends up helping someone, :) Cheers!&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;: note that just calling max(countdata) screws up competely &lt;code&gt;d_id&lt;/code&gt;: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; select d_id,name_id,max(countdata) as countdata from datas group by name_id;d_id  name_id       countdata ----  ------------  ----------3     2             87        1     1             47        &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;so to get correct corresponding &lt;code&gt;d_id&lt;/code&gt;, we must do &lt;code&gt;max()&lt;/code&gt; on &lt;code&gt;datas&lt;/code&gt; separately - and then perform sort of an intersect with the full &lt;code&gt;datas&lt;/code&gt; (&lt;em&gt;except that intersect in sqlite requires that there are equal number of columns in both datasets, which is not the case here - and even if we made it that way, as seen above &lt;code&gt;d_id&lt;/code&gt; will be wrong, so intersect will not work&lt;/em&gt;). &lt;/p&gt;&lt;p&gt;One way to do that is in using a sort of a temporary table, and then utilize a multiple table SELECT query so as to set conditions between full &lt;code&gt;datas&lt;/code&gt; and the subset returned via &lt;code&gt;max(countdata)&lt;/code&gt;, as shown below: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; CREATE TABLE ttemp AS SELECT max(countdata) as countdata,name_id FROM datas GROUP BY name_id;sqlite&amp;gt; SELECT d1.*, ttemp.* FROM datas AS d1, ttemp WHERE d1.name_id = ttemp.name_id AND d1.countdata = ttemp.countdata;d1.d  d1.name_id    d1.countda  ttemp.coun  ttemp.name_id                      ----  ------------  ----------  ----------  -----------------------------------2     1             47          47          1                                  5     2             87          87          2                                  sqlite&amp;gt; DROP TABLE ttemp;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;or, we can rewrite the above so a SELECT subquery (sub-select?) is used, like this: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; SELECT d1.* FROM datas AS d1, (SELECT max(countdata) as countdata,name_id FROM datas GROUP BY name_id) AS ttemp WHERE d1.name_id = ttemp.name_id AND d1.countdata = ttemp.countdata;d1.d  d1.name_id    d1.countda----  ------------  ----------2     1             47        5     2             87        &lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>sqlite2: Joining max values per column from another table (subquery reference)?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="3708396"><ownerid>277826</ownerid><questionid>3701955</questionid><creationdate>1284463686</creationdate><lastactivity>1284469351</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi, me again, &lt;/p&gt;&lt;p&gt;Well, I managed to put &lt;code&gt;writeread.c&lt;/code&gt; in a threaded version using &lt;code&gt;pthread&lt;/code&gt; (&lt;em&gt;code is below - I don't think &lt;code&gt;serial.h&lt;/code&gt; changed much; it's not used that much in the threaded version anyways&lt;/em&gt;). I have also lowered the speed to 115200, and now I can confirm these measurements with the device, in the sample command line session below: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ ./writeread /dev/ttyUSB0 115200 writeread.c 3&amp;gt;myout.txtstdalt opened; Alternative file descriptor: 3Opening port /dev/ttyUSB0;Got speed 115200 (4098/0x1002);Got file/string 'writeread.c'; opened as file (6131).write_thread_function spawned   write: 6131   read: 18   read: 64   read: 110   read: 156   read: 202...   read: 6066   read: 6089   read: 6123   read: 6131+++DONE+++Wrote: 6131 bytes; Read: 6131 bytes; Total: 12262 bytes. Start: 1284462824 s 141104 us; End: 1284462824 s 682598 us; Delta: 0 s 541494 us. 115200 baud for 8N1 is 11520 Bps (bytes/sec).Measured: write 11322.38 Bps (98.28%), read 11322.38 Bps (98.28%), total 22644.76 Bps.$ diff writeread.c myout.txt $ &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Well, measurements now report up to 99% of the expected baud rate, so I guess that means that the profiling aspect of this program should work. Notice:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For this device, the &lt;code&gt;write&lt;/code&gt; is executed in a single chunk (&lt;em&gt;as the PC should be able to handle the sequencing to packets, if necessary&lt;/em&gt;), &lt;/li&gt;&lt;li&gt;while the &lt;code&gt;read&lt;/code&gt; goes on in smaller chunks (&lt;em&gt;probably indicating that the device doesn't wait for the entire chunk to arrive - instead it starts sending back smaller chunks as soon as it has received enough&lt;/em&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Well, I guess this is what I needed originally; I also guess it is probably not possible to arrange &lt;code&gt;cat&lt;/code&gt; and &lt;code&gt;echo&lt;/code&gt; via process substitution to execute in this, let's call it "threaded", manner :) (&lt;em&gt;Now, I do have a problem with doing the same at 2000000 baud, but that indicates a problem with the programming of the device&lt;/em&gt;).&lt;/p&gt;&lt;p&gt;Cheers!&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;writeread.c&lt;/strong&gt; - &lt;em&gt;threaded version&lt;/em&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;/*    writeread.c - based on writeread.cpp    [SOLVED] Serial Programming, Write-Read Issue - http://www.linuxquestions.org/questions/programming-9/serial-programming-write-read-issue-822980/    build with: gcc -o writeread -lpthread -Wall -g writeread.c*/#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt;#include &amp;lt;stddef.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;sys/time.h&amp;gt;#include &amp;lt;pthread.h&amp;gt;#include "serial.h"int serport_fd;//POSIX Threads Programming - https://computing.llnl.gov/tutorials/pthreads/#PassingArgumentsstruct write_thread_data{   int  fd;   char* comm; //string to send   int bytesToSend;   int writtenBytes;};void usage(char **argv){    fprintf(stdout, "Usage:\n");     fprintf(stdout, "%s port baudrate file/string\n", argv[0]);     fprintf(stdout, "Examples:\n");     fprintf(stdout, "%s /dev/ttyUSB0 115200 /path/to/somefile.txt\n", argv[0]);     fprintf(stdout, "%s /dev/ttyUSB0 115200 \"some text test\"\n", argv[0]); }// POSIX threads explained - http://www.ibm.com/developerworks/library/l-posix1.html// instead of writeportvoid *write_thread_function(void *arg) {    int lastBytesWritten;    struct write_thread_data *my_data;    my_data = (struct write_thread_data *) arg;    fprintf(stdout, "write_thread_function spawned\n");    my_data-&amp;gt;writtenBytes = 0;     while(my_data-&amp;gt;writtenBytes &amp;lt; my_data-&amp;gt;bytesToSend)    {        lastBytesWritten = write( my_data-&amp;gt;fd, my_data-&amp;gt;comm + my_data-&amp;gt;writtenBytes, my_data-&amp;gt;bytesToSend - my_data-&amp;gt;writtenBytes );           my_data-&amp;gt;writtenBytes += lastBytesWritten;          if ( lastBytesWritten &amp;lt; 0 )         {            fprintf(stdout, "write failed!\n");            return 0;        }        fprintf(stderr, "   write: %d - %d\n", lastBytesWritten, my_data-&amp;gt;writtenBytes);    }    return NULL; //pthread_exit(NULL)}int main( int argc, char **argv ) {    if( argc != 4 ) {         usage(argv);        return 1;     }    char *serport;    char *serspeed;    speed_t serspeed_t;    char *serfstr;    int serf_fd; // if &amp;lt; 0, then serfstr is a string    int sentBytes;     int readChars;    int recdBytes, totlBytes;     char* sResp;    char* sRespTotal;    struct timeval timeStart, timeEnd, timeDelta;    float deltasec, expectBps, measReadBps, measWriteBps;     struct write_thread_data wrdata;    pthread_t myWriteThread;    /* Re: connecting alternative output stream to terminal -     * http://coding.derkeiler.com/Archive/C_CPP/comp.lang.c/2009-01/msg01616.html     * send read output to file descriptor 3 if open,     * else just send to stdout    */    FILE *stdalt;    if(dup2(3, 3) == -1) {        fprintf(stdout, "stdalt not opened; ");        stdalt = fopen("/dev/tty", "w");    } else {        fprintf(stdout, "stdalt opened; ");        stdalt = fdopen(3, "w");    }    fprintf(stdout, "Alternative file descriptor: %d\n", fileno(stdalt));    // Get the PORT name    serport = argv[1];    fprintf(stdout, "Opening port %s;\n", serport);    // Get the baudrate    serspeed = argv[2];    serspeed_t = string_to_baud(serspeed);    fprintf(stdout, "Got speed %s (%d/0x%x);\n", serspeed, serspeed_t, serspeed_t);    //Get file or command;    serfstr = argv[3];    serf_fd = open( serfstr, O_RDONLY );    fprintf(stdout, "Got file/string '%s'; ", serfstr);    if (serf_fd &amp;lt; 0) {        wrdata.bytesToSend = strlen(serfstr);        wrdata.comm = serfstr; //pointer already defined         fprintf(stdout, "interpreting as string (%d).\n", wrdata.bytesToSend);    } else {        struct stat st;        stat(serfstr, &amp;amp;st);        wrdata.bytesToSend = st.st_size;        wrdata.comm = (char *)calloc(wrdata.bytesToSend, sizeof(char));        read(serf_fd, wrdata.comm, wrdata.bytesToSend);        fprintf(stdout, "opened as file (%d).\n", wrdata.bytesToSend);    }    sResp = (char *)calloc(wrdata.bytesToSend, sizeof(char));    sRespTotal = (char *)calloc(wrdata.bytesToSend, sizeof(char));    // Open and Initialise port    serport_fd = open( serport, O_RDWR | O_NOCTTY | O_NONBLOCK );    if ( serport_fd &amp;lt; 0 ) { perror(serport); return 1; }    initport( serport_fd, serspeed_t );    wrdata.fd = serport_fd;    sentBytes = 0; recdBytes = 0;    gettimeofday( &amp;amp;timeStart, NULL );    // start the thread for writing..     if ( pthread_create( &amp;amp;myWriteThread, NULL, write_thread_function, (void *) &amp;amp;wrdata) ) {        printf("error creating thread.");        abort();    }    // run read loop     while ( recdBytes &amp;lt; wrdata.bytesToSend )    {        while ( wait_flag == TRUE );        if ( (readChars = read( serport_fd, sResp, wrdata.bytesToSend)) &amp;gt;= 0 )         {            //~ fprintf(stdout, "InVAL: (%d) %s\n", readChars, sResp);            // binary safe - add sResp chunk to sRespTotal            memmove(sRespTotal+recdBytes, sResp+0, readChars*sizeof(char));            /* // text safe, but not binary:            sResp[readChars] = '\0';             fprintf(stdalt, "%s", sResp);            */            recdBytes += readChars;        } else {            if ( errno == EAGAIN )             {                fprintf(stdout, "SERIAL EAGAIN ERROR\n");                return 0;            }             else             {                fprintf(stdout, "SERIAL read error: %d = %s\n", errno , strerror(errno));                return 0;            }                   }        fprintf(stderr, "   read: %d\n", recdBytes);                wait_flag = TRUE; // was ==        //~ usleep(50000);    }    if ( pthread_join ( myWriteThread, NULL ) ) {        printf("error joining thread.");        abort();    }    gettimeofday( &amp;amp;timeEnd, NULL );    // binary safe - dump sRespTotal to stdalt    fwrite(sRespTotal, sizeof(char), recdBytes, stdalt);    // Close the open port    close( serport_fd );    if (!(serf_fd &amp;lt; 0)) {         close( serf_fd );        free(wrdata.comm);     }     free(sResp);    free(sRespTotal);    fprintf(stdout, "\n+++DONE+++\n");    sentBytes = wrdata.writtenBytes;     totlBytes = sentBytes + recdBytes;    timeval_subtract(&amp;amp;timeDelta, &amp;amp;timeEnd, &amp;amp;timeStart);    deltasec = timeDelta.tv_sec+timeDelta.tv_usec*1e-6;    expectBps = atoi(serspeed)/10.0f;     measWriteBps = sentBytes/deltasec;    measReadBps = recdBytes/deltasec;    fprintf(stdout, "Wrote: %d bytes; Read: %d bytes; Total: %d bytes. \n", sentBytes, recdBytes, totlBytes);    fprintf(stdout, "Start: %ld s %ld us; End: %ld s %ld us; Delta: %ld s %ld us. \n", timeStart.tv_sec, timeStart.tv_usec, timeEnd.tv_sec, timeEnd.tv_usec, timeDelta.tv_sec, timeDelta.tv_usec);    fprintf(stdout, "%s baud for 8N1 is %d Bps (bytes/sec).\n", serspeed, (int)expectBps);    fprintf(stdout, "Measured: write %.02f Bps (%.02f%%), read %.02f Bps (%.02f%%), total %.02f Bps.\n", measWriteBps, (measWriteBps/expectBps)*100, measReadBps, (measReadBps/expectBps)*100, totlBytes/deltasec);    return 0;}&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Serial port loopback/duplex test, in Bash or C? (process substitution)</title><lastedit>1284469351</lastedit><accepted>true</accepted></answer><answer id="3705366"><ownerid>277826</ownerid><questionid>3701955</questionid><creationdate>1284424217</creationdate><lastactivity>1284425532</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi again, &lt;/p&gt;&lt;p&gt;Well, here is something like a partial answer - although the question about the use of bash is still open. I tried to look a little bit in some C code solutions - and that, it seems, isn't trivial either! :) &lt;/p&gt;&lt;p&gt;First, let's see what possibly &lt;strong&gt;doesn't&lt;/strong&gt; work for this case - below is an example from "&lt;a href="http://www.daniweb.com/forums/thread286634.html" rel="nofollow"&gt;between write and read:serial port. - C&lt;/a&gt;": &lt;/p&gt;&lt;pre&gt;&lt;code&gt;// from: between write and read:serial port. - C - http://www.daniweb.com/forums/thread286634.html// gcc -o sertest -Wall -g sertest.c#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;sys/types.h&amp;gt;#include &amp;lt;string.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;#include &amp;lt;fcntl.h&amp;gt;#include &amp;lt;errno.h&amp;gt;#include &amp;lt;termios.h&amp;gt;int main(int argc, char *argv[]){    char line[1024];    int chkin;    char input[1024];    char msg[1024];    char serport[24];    // argv[1] - serial port    // argv[2] - file or echo     sprintf(serport, "%s", argv[1]);    int file= open(serport, O_RDWR | O_NOCTTY | O_NDELAY);    if (file == 0)    {        sprintf(msg, "open_port: Unable to open %s.\n", serport);        perror(msg);    }    else        fcntl(file, F_SETFL, FNDELAY); //fcntl(file, F_SETFL, 0);    while (1)    {        printf("enter input data:\n");        scanf("%s",&amp;amp;input[0]);        chkin=write(file,input,sizeof input);        if (chkin&amp;lt;0)        {            printf("cannot write to port\n");        }        //chkin=read(file,line,sizeof line);        while ((chkin=read(file,line,sizeof line))&amp;gt;=0)        {            if (chkin&amp;lt;0)            {                printf("cannot read from port\n");            }            else            {                printf("bytes: %d, line=%s\n",chkin, line);            }        }        /*CODE TO EXIT THE LOOP GOES HERE*/        if (input[0] == 'q') break;    }    close(file);    return 0;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The problem with the above code is that it doesn't explicitly initialize the serial port for character ("raw") operation; so depending on how the port was set previously, a session may look like this: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ ./sertest /dev/ttyUSB0 enter input data:t1enter input data:t2enter input data:t3enter input data:^C&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... in other words, there is no echoing of the input data. However, if the serial port is set up properly, we can get a session like: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ ./sertest /dev/ttyUSB0 enter input data:t1enter input data:t2bytes: 127, line=t1enter input data:t3bytes: 127, line=t2enter input data:t4bytes: 127, line=t3enter input data:^C&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... (&lt;em&gt;but even then, this &lt;code&gt;sertest&lt;/code&gt; code fails on input words greater than 3 characters.&lt;/em&gt;)&lt;/p&gt;&lt;p&gt;Finally, through some online digging, I managed to find "&lt;a href="http://www.linuxquestions.org/questions/programming-9/serial-programming-write-read-issue-822980/" rel="nofollow"&gt;(SOLVED) Serial Programming, Write-Read Issue&lt;/a&gt;", which offers a &lt;code&gt;writeread.cpp&lt;/code&gt; example. However, for this byte-by-byte "duplex" case, not even that was enough - namely, "&lt;a href="http://www.faqs.org/docs/Linux-HOWTO/Serial-Programming-HOWTO.html#AEN92" rel="nofollow"&gt;Serial Programming HOWTO&lt;/a&gt;" notes: "&lt;em&gt;Canonical Input Processing ... is the normal processing mode for terminals ... which means that a read will only return a full line of input. A line is by default terminated by a NL  (ASCII LF) ...&lt;/em&gt;" ; and thus we have to &lt;strong&gt;explicitly&lt;/strong&gt; set the serial port to "non-canonical" (or "raw") mode in our code via &lt;code&gt;ICANON&lt;/code&gt; (&lt;em&gt;in other words, just setting &lt;code&gt;O_NONBLOCK&lt;/code&gt; via &lt;code&gt;open&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; enough&lt;/em&gt;) - an example for that is given at "&lt;a href="http://www.steve.org.uk/Reference/Unix/faq_4.html#SEC49" rel="nofollow"&gt;3.2 How can I read single characters from the terminal? - Unix Programming Frequently Asked Questions - 3. Terminal I/O&lt;/a&gt;". Once that is done, calling &lt;code&gt;writeread&lt;/code&gt; will "correctly" set the serial port for the &lt;code&gt;serport&lt;/code&gt; example (above), as well. &lt;/p&gt;&lt;p&gt;So I changed some of that &lt;code&gt;writeread&lt;/code&gt; code back to C, added the needed initialization stuff, as well as time measurement, possibility to send strings or files, and additional output stream (&lt;em&gt;for 'piping' the read serial data to a separate file&lt;/em&gt;). The code is below as &lt;code&gt;writeread.c&lt;/code&gt; and &lt;code&gt;serial.h&lt;/code&gt;, and with it, I can do something like in the following Bash session: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ ./writeread /dev/ttyUSB0 2000000 writeread.c 3&amp;gt;myout.txtstdalt opened; Alternative file descriptor: 3Opening port /dev/ttyUSB0;Got speed 2000000 (4107/0x100b);Got file/string 'writeread.c'; opened as file (4182).+++DONE+++Wrote: 4182 bytes; Read: 4182 bytes; Total: 8364 bytes. Start: 1284422340 s 443302 us; End: 1284422347 s 786999 us; Delta: 7 s 343697 us. 2000000 baud for 8N1 is 200000 Bps (bytes/sec).Measured: write 569.47 Bps, read 569.47 Bps, total 1138.94 Bps.$ diff writeread.c myout.txt $ ./writeread /dev/ttyUSB0 2000000 writeread.c 3&amp;gt;/dev/null stdalt opened; Alternative file descriptor: 3Opening port /dev/ttyUSB0;Got speed 2000000 (4107/0x100b);Got file/string 'writeread.c'; opened as file (4182).+++DONE+++Wrote: 4182 bytes; Read: 4182 bytes; Total: 8364 bytes. Start: 1284422380 s -461710 us; End: 1284422388 s 342977 us; Delta: 8 s 804687 us. 2000000 baud for 8N1 is 200000 Bps (bytes/sec).Measured: write 474.97 Bps, read 474.97 Bps, total 949.95 Bps.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Well:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;First surprise - it goes faster if I'm writing to a file, than if I'm piping to &lt;code&gt;/dev/null&lt;/code&gt;!&lt;/li&gt;&lt;li&gt;Also, getting around 1000 Bps - whereas the device is apparently set for 200000 BPS!!&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;At this point, I'm thinking that the slowdown is because after each written byte in &lt;code&gt;writeread.c&lt;/code&gt;, we wait for a flag to be cleared by the read interrupt, before we proceed to read the serial buffer. Possibly, if the reading and writing were separate threads, then both reading and writing could try to use bigger blocks of bytes in single &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; calls, and so bandwidth would be used better ?! (&lt;em&gt;Or, maybe the interrupt handler does act, in some sense, like a "thread" running in parallel - so maybe something similar could be achieved by moving all read related functions to the interrupt handler ?!&lt;/em&gt;)&lt;/p&gt;&lt;p&gt;Ah well - at this point, I am very open to suggestions / links for existing code like &lt;code&gt;writeread.c&lt;/code&gt;, but multithreaded :) And, of course, for any other possible Linux tools, or possibly Bash methods (although it seems Bash will not be able to exert this kind of control...)&lt;/p&gt;&lt;p&gt;Cheers!&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;writeread.c&lt;/strong&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;/*    writeread.c - based on writeread.cpp    [SOLVED] Serial Programming, Write-Read Issue - http://www.linuxquestions.org/questions/programming-9/serial-programming-write-read-issue-822980/    build with: gcc -o writeread -Wall -g writeread.c*/#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt;#include &amp;lt;stddef.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;sys/time.h&amp;gt;#include "serial.h"int serport_fd;void usage(char **argv){    fprintf(stdout, "Usage:\n");     fprintf(stdout, "%s port baudrate file/string\n", argv[0]);     fprintf(stdout, "Examples:\n");     fprintf(stdout, "%s /dev/ttyUSB0 115200 /path/to/somefile.txt\n", argv[0]);     fprintf(stdout, "%s /dev/ttyUSB0 115200 \"some text test\"\n", argv[0]); }int main( int argc, char **argv ) {    if( argc != 4 ) {         usage(argv);        return 1;     }    char *serport;    char *serspeed;    speed_t serspeed_t;    char *serfstr;    int serf_fd; // if &amp;lt; 0, then serfstr is a string    int bytesToSend;     int sentBytes;     char byteToSend[2];    int readChars;    int recdBytes, totlBytes;     char sResp[11];    struct timeval timeStart, timeEnd, timeDelta;    float deltasec;     /* Re: connecting alternative output stream to terminal -     * http://coding.derkeiler.com/Archive/C_CPP/comp.lang.c/2009-01/msg01616.html     * send read output to file descriptor 3 if open,     * else just send to stdout    */    FILE *stdalt;    if(dup2(3, 3) == -1) {        fprintf(stdout, "stdalt not opened; ");        stdalt = fopen("/dev/tty", "w");    } else {        fprintf(stdout, "stdalt opened; ");        stdalt = fdopen(3, "w");    }    fprintf(stdout, "Alternative file descriptor: %d\n", fileno(stdalt));    // Get the PORT name    serport = argv[1];    fprintf(stdout, "Opening port %s;\n", serport);    // Get the baudrate    serspeed = argv[2];    serspeed_t = string_to_baud(serspeed);    fprintf(stdout, "Got speed %s (%d/0x%x);\n", serspeed, serspeed_t, serspeed_t);    //Get file or command;    serfstr = argv[3];    serf_fd = open( serfstr, O_RDONLY );    fprintf(stdout, "Got file/string '%s'; ", serfstr);    if (serf_fd &amp;lt; 0) {        bytesToSend = strlen(serfstr);        fprintf(stdout, "interpreting as string (%d).\n", bytesToSend);    } else {        struct stat st;        stat(serfstr, &amp;amp;st);        bytesToSend = st.st_size;        fprintf(stdout, "opened as file (%d).\n", bytesToSend);    }    // Open and Initialise port    serport_fd = open( serport, O_RDWR | O_NOCTTY | O_NONBLOCK );    if ( serport_fd &amp;lt; 0 ) { perror(serport); return 1; }    initport( serport_fd, serspeed_t );    sentBytes = 0; recdBytes = 0;    byteToSend[0]='x'; byteToSend[1]='\0';    gettimeofday( &amp;amp;timeStart, NULL );    // write / read loop - interleaved (i.e. will always write     // one byte at a time, before 'emptying' the read buffer )     while ( sentBytes &amp;lt; bytesToSend )    {        // read next byte from input...        if (serf_fd &amp;lt; 0) { //interpreting as string            byteToSend[0] = serfstr[sentBytes];        } else { //opened as file             read( serf_fd, &amp;amp;byteToSend[0], 1 );        }        if ( !writeport( serport_fd, byteToSend ) ) {             fprintf(stdout, "write failed\n");         }        //~ fprintf(stdout, "written:%s\n", byteToSend );        while ( wait_flag == TRUE );        if ( (readChars = readport( serport_fd, sResp, 10)) &amp;gt;= 0 )         {            //~ fprintf(stdout, "InVAL: (%d) %s\n", readChars, sResp);            recdBytes += readChars;            fprintf(stdalt, "%s", sResp);        }        wait_flag = TRUE; // was ==        //~ usleep(50000);        sentBytes++;    }    gettimeofday( &amp;amp;timeEnd, NULL );    // Close the open port    close( serport_fd );    if (!(serf_fd &amp;lt; 0)) close( serf_fd );    fprintf(stdout, "\n+++DONE+++\n");    totlBytes = sentBytes + recdBytes;    timeval_subtract(&amp;amp;timeDelta, &amp;amp;timeEnd, &amp;amp;timeStart);    deltasec = timeDelta.tv_sec+timeDelta.tv_usec*1e-6;    fprintf(stdout, "Wrote: %d bytes; Read: %d bytes; Total: %d bytes. \n", sentBytes, recdBytes, totlBytes);    fprintf(stdout, "Start: %ld s %ld us; End: %ld s %ld us; Delta: %ld s %ld us. \n", timeStart.tv_sec, timeStart.tv_usec, timeEnd.tv_sec, timeEnd.tv_usec, timeDelta.tv_sec, timeDelta.tv_usec);    fprintf(stdout, "%s baud for 8N1 is %d Bps (bytes/sec).\n", serspeed, atoi(serspeed)/10);    fprintf(stdout, "Measured: write %.02f Bps, read %.02f Bps, total %.02f Bps.\n", sentBytes/deltasec, recdBytes/deltasec, totlBytes/deltasec);    return 0;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;serial.h&lt;/strong&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;/* serial.h    (C) 2004-5 Captain http://www.captain.at    Helper functions for "ser"    Used for testing the PIC-MMC test-board    http://www.captain.at/electronic-index.php*/#include &amp;lt;stdio.h&amp;gt;   /* Standard input/output definitions */#include &amp;lt;string.h&amp;gt;  /* String function definitions */#include &amp;lt;unistd.h&amp;gt;  /* UNIX standard function definitions */#include &amp;lt;fcntl.h&amp;gt;   /* File control definitions */#include &amp;lt;errno.h&amp;gt;   /* Error number definitions */#include &amp;lt;termios.h&amp;gt; /* POSIX terminal control definitions */#include &amp;lt;sys/signal.h&amp;gt;#include &amp;lt;sys/stat.h&amp;gt;#include &amp;lt;sys/types.h&amp;gt;#define TRUE    1#define FALSE   0int wait_flag = TRUE;   // TRUE while no signal received// Definition of Signal Handlervoid DAQ_signal_handler_IO ( int status ){    //~ fprintf(stdout, "received SIGIO signal %d.\n", status);    wait_flag = FALSE;}int writeport( int fd, char *comm ) {    int len = strlen( comm );    int n = write( fd, comm, len );    if ( n &amp;lt; 0 )     {        fprintf(stdout, "write failed!\n");        return 0;    }    return n;}int readport( int fd, char *resp, size_t nbyte ) {    int iIn = read( fd, resp, nbyte );    if ( iIn &amp;lt; 0 )     {        if ( errno == EAGAIN )         {            fprintf(stdout, "SERIAL EAGAIN ERROR\n");            return 0;        }         else         {            fprintf(stdout, "SERIAL read error: %d = %s\n", errno , strerror(errno));            return 0;        }    }    if ( resp[iIn-1] == '\r' )        resp[iIn-1] = '\0';    else        resp[iIn] = '\0';    return iIn;}int getbaud( int fd ) {    struct termios termAttr;    int inputSpeed = -1;    speed_t baudRate;    tcgetattr( fd, &amp;amp;termAttr );    // Get the input speed    baudRate = cfgetispeed( &amp;amp;termAttr );    switch ( baudRate )    {        case B0:      inputSpeed = 0; break;        case B50:     inputSpeed = 50; break;        case B110:    inputSpeed = 110; break;        case B134:    inputSpeed = 134; break;        case B150:    inputSpeed = 150; break;        case B200:    inputSpeed = 200; break;        case B300:    inputSpeed = 300; break;        case B600:    inputSpeed = 600; break;        case B1200:   inputSpeed = 1200; break;        case B1800:   inputSpeed = 1800; break;        case B2400:   inputSpeed = 2400; break;        case B4800:   inputSpeed = 4800; break;        case B9600:   inputSpeed = 9600; break;        case B19200:  inputSpeed = 19200; break;        case B38400:  inputSpeed = 38400; break;        case B115200: inputSpeed = 115200; break;        case B2000000: inputSpeed = 2000000; break; //added    }    return inputSpeed;}/* ser.c    (C) 2004-5 Captain http://www.captain.at    Sends 3 characters (ABC) via the serial port (/dev/ttyS0) and reads    them back if they are returned from the PIC.    Used for testing the PIC-MMC test-board    http://www.captain.at/electronic-index.php*/int initport( int fd, speed_t baudRate ) {    struct termios options;    struct sigaction saio;  // Definition of Signal action    // Install the signal handler before making the device asynchronous    saio.sa_handler = DAQ_signal_handler_IO;    saio.sa_flags = 0;    saio.sa_restorer = NULL;    sigaction( SIGIO, &amp;amp;saio, NULL );    // Allow the process to receive SIGIO    fcntl( fd, F_SETOWN, getpid() );    // Make the file descriptor asynchronous (the manual page says only     // O_APPEND and O_NONBLOCK, will work with F_SETFL...)    fcntl( fd, F_SETFL, FASYNC );    //~ fcntl( fd, F_SETFL, FNDELAY); //doesn't work; //fcntl(file, F_SETFL, 0);    // Get the current options for the port...    tcgetattr( fd, &amp;amp;options );/*           // Set port settings for canonical input processing    options.c_cflag = BAUDRATE | CRTSCTS | CLOCAL | CREAD;    options.c_iflag = IGNPAR | ICRNL;    //options.c_iflag = IGNPAR;    options.c_oflag = 0;    options.c_lflag = ICANON;    //options.c_lflag = 0;    options.c_cc[VMIN] = 0;    options.c_cc[VTIME] = 0;*/       /* ADDED - else 'read' will not return, unless it sees LF '\n' !!!!    * From: Unix Programming Frequently Asked Questions - 3. Terminal I/O -     * http://www.steve.org.uk/Reference/Unix/faq_4.html     */    /* Disable canonical mode, and set buffer size to 1 byte */    options.c_lflag &amp;amp;= (~ICANON);    options.c_cc[VTIME] = 0;    options.c_cc[VMIN] = 1;     // Set the baud rates to...    cfsetispeed( &amp;amp;options, baudRate );    cfsetospeed( &amp;amp;options, baudRate );    // Enable the receiver and set local mode...    options.c_cflag |= ( CLOCAL | CREAD );    options.c_cflag &amp;amp;= ~PARENB;    options.c_cflag &amp;amp;= ~CSTOPB;    options.c_cflag &amp;amp;= ~CSIZE;    options.c_cflag |= CS8;    // Flush the input &amp;amp; output...    tcflush( fd, TCIOFLUSH );    // Set the new options for the port...    tcsetattr( fd, TCSANOW, &amp;amp;options );    return 1;}/*     ripped from     http://git.savannah.gnu.org/cgit/coreutils.git/tree/src/stty.c*/#define STREQ(a, b)     (strcmp((a), (b)) == 0)struct speed_map{  const char *string;       /* ASCII representation. */  speed_t speed;        /* Internal form. */  unsigned long int value;  /* Numeric value. */};static struct speed_map const speeds[] ={  {"0", B0, 0},  {"50", B50, 50},  {"75", B75, 75},  {"110", B110, 110},  {"134", B134, 134},  {"134.5", B134, 134},  {"150", B150, 150},  {"200", B200, 200},  {"300", B300, 300},  {"600", B600, 600},  {"1200", B1200, 1200},  {"1800", B1800, 1800},  {"2400", B2400, 2400},  {"4800", B4800, 4800},  {"9600", B9600, 9600},  {"19200", B19200, 19200},  {"38400", B38400, 38400},  {"exta", B19200, 19200},  {"extb", B38400, 38400},#ifdef B57600  {"57600", B57600, 57600},#endif#ifdef B115200  {"115200", B115200, 115200},#endif#ifdef B230400  {"230400", B230400, 230400},#endif#ifdef B460800  {"460800", B460800, 460800},#endif#ifdef B500000  {"500000", B500000, 500000},#endif#ifdef B576000  {"576000", B576000, 576000},#endif#ifdef B921600  {"921600", B921600, 921600},#endif#ifdef B1000000  {"1000000", B1000000, 1000000},#endif#ifdef B1152000  {"1152000", B1152000, 1152000},#endif#ifdef B1500000  {"1500000", B1500000, 1500000},#endif#ifdef B2000000  {"2000000", B2000000, 2000000},#endif#ifdef B2500000  {"2500000", B2500000, 2500000},#endif#ifdef B3000000  {"3000000", B3000000, 3000000},#endif#ifdef B3500000  {"3500000", B3500000, 3500000},#endif#ifdef B4000000  {"4000000", B4000000, 4000000},#endif  {NULL, 0, 0}};static speed_tstring_to_baud (const char *arg){  int i;  for (i = 0; speeds[i].string != NULL; ++i)    if (STREQ (arg, speeds[i].string))      return speeds[i].speed;  return (speed_t) -1;}/* http://www.gnu.org/software/libtool/manual/libc/Elapsed-Time.htmlSubtract the `struct timeval' values X and Y,storing the result in RESULT.Return 1 if the difference is negative, otherwise 0.  */int timeval_subtract (struct timeval *result, struct timeval *x, struct timeval *y){    /* Perform the carry for the later subtraction by updating y. */    if (x-&amp;gt;tv_usec &amp;lt; y-&amp;gt;tv_usec) {     int nsec = (y-&amp;gt;tv_usec - x-&amp;gt;tv_usec) / 1000000 + 1;     y-&amp;gt;tv_usec -= 1000000 * nsec;     y-&amp;gt;tv_sec += nsec;    }    if (x-&amp;gt;tv_usec - y-&amp;gt;tv_usec &amp;gt; 1000000) {     int nsec = (x-&amp;gt;tv_usec - y-&amp;gt;tv_usec) / 1000000;     y-&amp;gt;tv_usec += 1000000 * nsec;     y-&amp;gt;tv_sec -= nsec;    }    /* Compute the time remaining to wait.      tv_usec is certainly positive. */    result-&amp;gt;tv_sec = x-&amp;gt;tv_sec - y-&amp;gt;tv_sec;    result-&amp;gt;tv_usec = x-&amp;gt;tv_usec - y-&amp;gt;tv_usec;    /* Return 1 if result is negative. */    return x-&amp;gt;tv_sec &amp;lt; y-&amp;gt;tv_sec;}&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Serial port loopback/duplex test, in Bash or C? (process substitution)</title><lastedit>1284425532</lastedit><accepted>false</accepted></answer><answer id="3432416"><ownerid>277826</ownerid><questionid>3430445</questionid><creationdate>1281222867</creationdate><lastactivity>1281252071</lastactivity><body>&lt;![CDATA[&lt;p&gt;Ok, after reading the &lt;code&gt;gnuplot&lt;/code&gt; help for a bit, it seems that histogram style will ''always'' interpret x axis as sequential entries/categories - so indeed, there seems to be no way to get a numerical axis with a histogram style. &lt;/p&gt;&lt;p&gt;However, it turns out that &lt;code&gt;$&lt;/code&gt; can refer to a column, and those can be used to actually 'reposition' the bars in the second (&lt;code&gt;frequency with boxes&lt;/code&gt; style) example; so with this code as &lt;code&gt;hist-v2b.gplot&lt;/code&gt;: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;set xlabel "X values"set ylabel "Occurence"set style fill solid border -1set term pngset output 'hist-v2.png'set boxwidth 0.9set xr [330:400]# here, setting xtics makes them positioned numerically on x axis:set xtics ("332" 332, "336" 336, "340" 340, "394" 394, "398" 398, "1036" 1036)  # 1:2 will ONLY work with proper xr; since we have x&amp;gt;300; xr[0:10] generates "points y value undefined"!plot 'data.dat' using ($1-0.5):2 ti col smooth frequency with boxes, '' u ($1-0.25):3 ti col smooth frequency with boxes, '' u ($1+0.25):4 ti col smooth frequency with boxes, '' u ($1+0.5):5 ti col smooth frequency with boxes&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And by calling:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;gnuplot hist-v2b.gplot &amp;amp;&amp;amp; eog hist-v2b.png&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;this image is generated:&lt;img src="http://img823.imageshack.us/img823/805/histv2b.png" alt="image hist-v2b.png"&gt;&lt;/p&gt;&lt;p&gt;... which is pretty much what I wanted in the first place.&lt;/p&gt;&lt;p&gt;Just a small note - I originally wanted to use the script with inline data; for a setup like this, it would have to be written as&lt;/p&gt;&lt;pre&gt;&lt;code&gt;plot '-' using ($1-0.5):2 ti col smooth frequency with boxes, '-' u ($1-0.25):3 ti col smooth frequency with boxesXstep Y1 Y2 Y3 Y4332 1.22 0.00 0.00 1.43336 5.95 12.03 6.11 10.41340 81.05 81.82 81.92 81.05394 11.76 6.16 10.46 5.87398 0.00 0.00 1.51 1.251036 0.03 0.00 0.00 0.00endXstep Y1 Y2 Y3 Y4332 1.22 0.00 0.00 1.43336 5.95 12.03 6.11 10.41340 81.05 81.82 81.92 81.05394 11.76 6.16 10.46 5.87398 0.00 0.00 1.51 1.251036 0.03 0.00 0.00 0.00end&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... that is, the data would have to be entered multiple times, as it comes in from stdin - this problem is discussed in &lt;a href="http://www.linuxquestions.org/questions/linux-software-2/gnuplot-do-multiple-plots-from-data-file-with-built-in-commands-659156/" rel="nofollow"&gt;gnuplot - do multiple plots from data file with built-in commands&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Cheers!&lt;/p&gt;&lt;p&gt;PS: As there is quite a bit of space on the diagram, it would be nice if we could somehow specify separate x-axis ranges; that is discussed in:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://gnuplot-tricks.blogspot.com/2009/05/gnuplot-tricks-many-say-that-it-is.html" rel="nofollow"&gt;Gnuplot tricks&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://gnuplot-tricks.blogspot.com/2009/06/broken-axis-revisited.html" rel="nofollow"&gt;Gnuplot tricks: Broken axis revisited&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;]]&gt;</body><title>Histogram with numeric x-axis in gnuplot?</title><lastedit>1281252071</lastedit><accepted>true</accepted></answer><answer id="3312105"><ownerid>277826</ownerid><questionid>3311182</questionid><creationdate>1279823236</creationdate><lastactivity>1279957330</lastactivity><body>&lt;![CDATA[&lt;p&gt;Hi all, &lt;/p&gt;&lt;p&gt;Just wanted to say - thanks for all your good and incredibly fast answers, helped me a lot to understand the problem (of why there isn't such a 'native' function in C)! &lt;/p&gt;&lt;p&gt;(&lt;em&gt;and sorry for answering my own question - doing that, so as not to garble the original post, and being able to format code&lt;/em&gt;)&lt;/p&gt;&lt;p&gt;While looking further I managed to find:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/17965/generate-a-core-dump-in-linux"&gt;generate a core dump in linux - Stack Overflow&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a href="http://groups.google.com/group/mlist.linux.kernel/msg/7f8a9393cde343d1" rel="nofollow"&gt;just-in-time debugging? - mlist.linux.kernel | Google Groups&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;which illustrate the trick with calling &lt;code&gt;gdb&lt;/code&gt; with the pid of the process itself, and so I modified the &lt;code&gt;dumpstack&lt;/code&gt; function found there, to get the following code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;FN=mtestcat &amp;gt; $FN.c &amp;lt;&amp;lt;EOF#include &amp;lt;stdio.h&amp;gt; //printf#include &amp;lt;stdlib.h&amp;gt; //calloc, systemextern const char *__progname;struct person{    int age;     int height; };static struct person *johndoe;static char report[255]; static void printout_struct(void* invar, char* structname){    /* dumpstack(void) Got this routine from http://www.whitefang.com/unix/faq_toc.html    ** Section 6.5. Modified to redirect to file to prevent clutter    */    /* This needs to be changed... */    char dbx[160];    sprintf(dbx, "echo 'p (struct %s)*%p\n' &amp;gt; gdbcmds", structname, invar );    system(dbx);    sprintf(dbx, "echo 'where\ndetach' | gdb -batch --command=gdbcmds %s %d &amp;gt; struct.dump", __progname, getpid() );    system(dbx);    sprintf(dbx, "cat struct.dump");    system(dbx);    return;}main (){    johndoe = (struct person *)calloc(1, sizeof(struct person));    johndoe-&amp;gt;age = 6;     printout_struct(johndoe, "person");     johndoe-&amp;gt;age = 8;     printout_struct(johndoe, "person");     printf("Hello World - age: %d\n:", johndoe-&amp;gt;age);    free(johndoe);}EOFgcc -g -O0 $FN.c -o $FN./$FN&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;which basically ends up displaying what I wanted:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;0x00740422 in __kernel_vsyscall ()$1 = {age = 6, height = 0}0x00740422 in __kernel_vsyscall ()$1 = {age = 8, height = 0}Hello World - age: 8&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Though, I'm not sure it will work with kernel modules ... &lt;/p&gt;&lt;p&gt;Thanks again for the help, &lt;br/&gt;Cheers!&lt;/p&gt;&lt;p&gt;EDIT: The reason why I don't think it will work for kernel modules, is that in this case, we have a userland program with a process ID; and we simply call &lt;code&gt;gdb&lt;/code&gt; from this program, while instructing it about our PID - so &lt;code&gt;gdb&lt;/code&gt; can "attach" to our process; then, since &lt;code&gt;gdb&lt;/code&gt; is also instructed to load the executable with debug symbols (so it will 'know' what the struct is), and instructed about the address where a given struct variable is located, &lt;code&gt;gdb&lt;/code&gt; can then printout the struct. &lt;/p&gt;&lt;p&gt;For kernel modules - first I don't think they are 'processes' in the sense of having a unique PID, so &lt;code&gt;gdb&lt;/code&gt; will have nothing to attach to! In fact, there is a kernel debugger, &lt;a href="http://en.wikipedia.org/wiki/KGDB" rel="nofollow"&gt;kgdb&lt;/a&gt; which can in fact break into a running kernel and step through &lt;em&gt;module&lt;/em&gt; source code; however, you need a second machine connected through a serial connection for that - or a virtual machine, see &lt;a href="http://linux-hacks.blogspot.com/2008/05/setting-up-kgdb-using-kvmqemu.html" rel="nofollow"&gt;Linux Hacks: Setting up kgdb using kvm/qemu&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;So, in any case, it seems that &lt;code&gt;gdb&lt;/code&gt; would not be able to inspect memory of the currently running host kernel &lt;code&gt;gdb&lt;/code&gt; is running in - but I'll try to experiment, and if the experiments show otherwise, I'll be sure to post :) &lt;/p&gt;]]&gt;</body><title>Linux C: Easy &amp; 'pretty' dump/printout of structs (like in gdb) - from source code?</title><lastedit>1279957330</lastedit><accepted>true</accepted></answer><answer id="2518878"><ownerid>236455</ownerid><questionid>2518833</questionid><creationdate>1269546608</creationdate><lastactivity>1269546914</lastactivity><body>&lt;![CDATA[&lt;p&gt;The correct escape character in Lua is %, so what you tried should work, I just tried&lt;/p&gt;&lt;pre&gt;&lt;code&gt;local sel = [[a\left(b_{d}\right)]]local cln3 = string.gsub(sel, "\\left%(", " \\left( ")local cln4 = string.gsub(cln3, "\\right%)", " \\right) ")print (cln4)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and got&lt;/p&gt;&lt;pre&gt;&lt;code&gt;a \left( b_{d} \right) &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;so, this worked for me when I tried it, what did you get as a match when you tried %&lt;/p&gt;]]&gt;</body><title>Scite Lua - escaping right bracket in regex?</title><lastedit>1269546914</lastedit><accepted>false</accepted></answer><answer id="2780161"><ownerid>69307</ownerid><questionid>2780051</questionid><creationdate>1273140034</creationdate><lastactivity>1273140034</lastactivity><body>&lt;![CDATA[&lt;p&gt;Standard input is a buffered stream. The select() call will not be able to detect that there is input available until the newline is hit at the end of the input. You can't use select() like this to read individual keystrokes.&lt;/p&gt;]]&gt;</body><title>Linux C select: piping echo to input works, but reading from keyboard doesn't?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="2781546"><ownerid>324528</ownerid><questionid>2781297</questionid><creationdate>1273153002</creationdate><lastactivity>1273153002</lastactivity><body>&lt;![CDATA[&lt;p&gt;If you just want to be able to receive multiple lines, rather than exiting after one, this is simple.  You just need to place a loop around your read/write code, like so (quick and dirty):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;while( 1 ) {    numread = read(rdfd, buf, MAX_BUF_SIZE);    fprintf(stderr, "Full Duplex Server : Read From the pipe : %sn", buf);    /* Convert to the string to upper case */    count = 0;    while (count &amp;lt; numread) {        buf[count] = toupper(buf[count]);        count++;    }    /*     * Write the converted string back to the second     * pipe     */    write(wrfd, buf, strlen(buf));}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Of course, now you have an application which will never exit, and will start doing nothing as soon as it gets an EOF, etc.  So, you can reorganize it to check for errors:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;numread = read(rdfd, buf, MAX_BUF_SIZE);while( numread &amp;gt; 0) {    /* ... etc ... */    numread = read(rdfd,buf, MAX_BUF_SIZE);}if( numread == 0 )  {    /* ... handle eof ... */}if( numread &amp;lt; 0 ) {    /* ... handle io error ... */} &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;From the man page, read returns 0 for EOF and -1 for an error (you have read the man page, right?  &lt;a href="http://linux.die.net/man/2/read" rel="nofollow"&gt;http://linux.die.net/man/2/read&lt;/a&gt; ).  So what this does is keeps on grabbing bytes from the read pipe until it reaches EOF or some error, in which case you (probably) print a message and exit.  That said, you might just do a reopen when you get an EOF so you can get more input.&lt;/p&gt;&lt;p&gt;Once you've modified your program to read continuously, entering multiple lines interactively is simple.  Just execute:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;cat - &amp;gt; /tmp/np1&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The '-' explicitly tells cat to read from stdin (this is the default, so you don't actually need the dash).  So cat will pass everything you enter on to your pipe program.  You can insert an EOF using Ctrl+D, which will cause cat to stop reading stdin.  What happens to your pipe program depends on how you handle the EOF in your read loop.&lt;/p&gt;&lt;p&gt;Now, if you want another program that does all the io, without cat, (so you end up with a stdio echo program), the pseudocode is going to look sort of like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;const int stdin_fd = 0;  // known unix constant!int readpipe_fd = open the read pipe, as before int writepipe_fd =  open the write pipe, as before read stdin into bufferwhile( stdin is reading correctly ) {     write data from stdin to read pipe         check write is successful     read write pipe into buffer         check read is successful     write buffer to stdout (fprintf is fine)     read stdin into buffer.}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can use the read system call to read stdin if you feel like it, but you can also just use stdio.  Reading, writing, and opening your pipes should all be identical to your server program, except read/write is all reversed.&lt;/p&gt;]]&gt;</body><title>Linux C: "Interactive session" with separate read and write named pipes?</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="3311204"><ownerid>354803</ownerid><questionid>3311182</questionid><creationdate>1279816927</creationdate><lastactivity>1279816927</lastactivity><body>&lt;![CDATA[&lt;p&gt;You have to add meta-info describing the structure, so that printout_struct can do its job. Otherwise, it can't guess anything. Try with gdb removing every debugging info, and you will see that it can't "speak" about "age" or whatever.&lt;/p&gt;]]&gt;</body><title>Linux C: Easy &amp; 'pretty' dump/printout of structs (like in gdb) - from source code?</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="3922189"><ownerid>430719</ownerid><questionid>3921931</questionid><creationdate>1286961089</creationdate><lastactivity>1286961089</lastactivity><body>&lt;![CDATA[&lt;p&gt;I have had good experiences with using &lt;a href="http://www.stack.nl/~dimitri/doxygen/index.html" rel="nofollow"&gt;doxygen&lt;/a&gt; for that task. It is designed to create documentation out of annotated source files, but it can already give you a lot of things without the annotations, including various graphs.Doxygen uses dot for the graph creation.&lt;/p&gt;]]&gt;</body><title>Visualising C structs?</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="3999695"><ownerid>464709</ownerid><questionid>3999114</questionid><creationdate>1287771161</creationdate><lastactivity>1287777791</lastactivity><body>&lt;![CDATA[&lt;p&gt;This can't be done without getting the parent process involved. Fortunately, there's a way to get &lt;a href="http://www.faqs.org/docs/abs/HTML/index.html" rel="nofollow"&gt;bash&lt;/a&gt; involved using &lt;a href="http://www.faqs.org/docs/abs/HTML/io-redirection.html" rel="nofollow"&gt;I/O redirection&lt;/a&gt; :&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ (echo "foo" | ./pipe.py) 3&amp;lt;&amp;amp;0&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That will pipe &lt;code&gt;foo&lt;/code&gt; to &lt;code&gt;pipe.py&lt;/code&gt; in a subshell with &lt;code&gt;stdin&lt;/code&gt; duplicated into file descriptor 3. Now all we need to do is use that extra help from our parent process in the python script (since we'll inherit fd 3):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env pythonimport sys, osimport cursesoutput = sys.stdin.readline(100)# We're finished with stdin. Duplicate inherited fd 3,# which contains a duplicate of the parent process' stdin,# into our stdin, at the OS level (assigning os.fdopen(3)# to sys.stdin or sys.__stdin__ does not work).os.dup2(3, 0)# Now curses can initialize.screen = curses.initscr()screen.border(0)screen.addstr(12, 25, output)screen.refresh()screen.getch()curses.endwin()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, you can work around the ugly syntax on the command line by running the subshell first:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ exec 3&amp;lt;&amp;amp;0  # spawn subshell$ echo "foo" | ./pipe.py  # works$ echo "bar" | ./pipe.py  # still works&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That solves your problem, if you have &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt;]]&gt;</body><title>Linux: Pipe into Python (ncurses) script, stdin and termios</title><lastedit>1287777791</lastedit><accepted>true</accepted></answer><answer id="4000997"><ownerid>371250</ownerid><questionid>3999114</questionid><creationdate>1287781828</creationdate><lastactivity>1287781828</lastactivity><body>&lt;![CDATA[&lt;blockquote&gt; The problem is that whenever I try the actual piping, that seems to mess up stdin, and the curses window never shows. [...snip...]As far as I can see, the issue is: - whenever we pipe strings into the Python script, the Python script loses the reference to the terminal as stdin, and notices that the replaced stdin is not a termios structure anymore - and since stdin is no longer a terminal, curses.initscr() exits immediately without rendering anything.&lt;/blockquote&gt;&lt;p&gt;Actually, the curses window does show, but since there is no more input on your brave new &lt;em&gt;stdin&lt;/em&gt;, &lt;code&gt;myscreen.getch()&lt;/code&gt; returns immediately. So it has nothing to do with curses testing whether &lt;em&gt;stdin&lt;/em&gt; is a terminal.&lt;/p&gt;&lt;p&gt;So if you want to use &lt;code&gt;myscreen.getch()&lt;/code&gt; and other curses input functions, you'll have to reopen your terminal. On Linux and *nix systems there is usually a device called &lt;code&gt;/dev/tty&lt;/code&gt; that refers to the current terminal. So you can do something like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;f=open("/dev/tty")os.dup2(f.fileno(), 0)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;before your call to &lt;code&gt;myscreen.getch()&lt;/code&gt;.&lt;/p&gt;]]&gt;</body><title>Linux: Pipe into Python (ncurses) script, stdin and termios</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="4033343"><ownerid>104596</ownerid><questionid>4025320</questionid><creationdate>1288183639</creationdate><lastactivity>1288183639</lastactivity><body>&lt;![CDATA[&lt;p&gt;In short, no, I can't see anything wrong with the sequence you're doing, or why it would cause that behaviour.&lt;/p&gt;&lt;p&gt;The fact that the kernel allows the newly built module to be inserted basically means that you've built it properly and it has also inserted correctly, so there are no version mismatches or anything.&lt;/p&gt;&lt;p&gt;I'll guess that when you run the test at 2000000 bps, you first tested the vanilla driver and then the new driver? So my guess is the driver is not cleaning up something correctly, so when you run the test again (with the new driver) you see a segfault. But like I said, that's a guess.&lt;/p&gt;]]&gt;</body><title>Building out-of-tree kernel modules, depmod - and, why reboot? </title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="4036877"><ownerid>130641</ownerid><questionid>4036743</questionid><creationdate>1288207390</creationdate><lastactivity>1288207390</lastactivity><body>&lt;![CDATA[&lt;p&gt;The following worked fine for me:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;line = "//thisisatest"fchars = string.sub(line, 1, 2) -- I assume you meant 1,2 since // and ##                                -- are only 2 characters longif fchars == "//" or fchars == "##" then -- you're missing 'then'   print("got it!") end&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Scite Lua: string comparison raises "attempt to call a string value"?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="2511162"><ownerid>236455</ownerid><questionid>2510765</questionid><creationdate>1269462609</creationdate><lastactivity>1269462609</lastactivity><body>&lt;![CDATA[&lt;p&gt;While investigating meta-diff from another answer I found a solution built into P4V itself. It turns out that the dialog in P4V that you use to specify your diff tool has an additional set of options to specify a different tool for different file extensions.&lt;/p&gt;&lt;p&gt;So it seems I don't need to write a plugin or extend p4v at all, I just need to set those properties correctly.&lt;/p&gt;]]&gt;</body><title>Extending Perforce to use a custom content diff tool for certain file extensions</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="1981561"><ownerid>239696</ownerid><questionid>1981524</questionid><creationdate>1262196457</creationdate><lastactivity>1262196457</lastactivity><body>&lt;![CDATA[&lt;p&gt;This has been possible since the &lt;code&gt;queryset-refactor&lt;/code&gt; branch landed pre-1.0.  &lt;a href="http://code.djangoproject.com/ticket/4088" rel="nofollow"&gt;Ticket 4088&lt;/a&gt; exposed the problem.  This should work:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Asset.objects.filter(    desc__contains=filter,    project__name__contains="Foo").order_by("desc")&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;a href="http://www.djangoproject.com/documentation/models/many%5Fto%5Fone/#sample-usage" rel="nofollow"&gt;Django Many-to-one documentation&lt;/a&gt; has this and other examples of following Foreign Keys using the Model API.&lt;/p&gt;]]&gt;</body><title>Django - filtering on foreign key properties</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="1981562"><ownerid>121112</ownerid><questionid>1981524</questionid><creationdate>1262196474</creationdate><lastactivity>1262196474</lastactivity><body>&lt;![CDATA[&lt;p&gt;&lt;code&gt;Asset.objects.filter( project__name__contains="Foo" )&lt;/code&gt;&lt;/p&gt;]]&gt;</body><title>Django - filtering on foreign key properties</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="1986390"><ownerid>95810</ownerid><questionid>1986335</questionid><creationdate>1262281787</creationdate><lastactivity>1262281787</lastactivity><body>&lt;![CDATA[&lt;p&gt;&lt;code&gt;Asset.__subclasses__()&lt;/code&gt; gives the &lt;em&gt;immediate&lt;/em&gt; subclasses of &lt;code&gt;Asset&lt;/code&gt;, but whether that's sufficient depends on whether that &lt;em&gt;immediate&lt;/em&gt; part is a problem for you -- if you want all descendants to whatever number of levels, you'll need recursive expansion, e.g.:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;def descendants(aclass):  directones = aclass.__subclasses__()  if not directones: return  for c in directones:    yield c    for x in descendants(c): yield x&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Your examples suggest you only care about classes directly subclassing &lt;code&gt;Asset&lt;/code&gt;, in which case you might not need this extra level of expansion.&lt;/p&gt;]]&gt;</body><title>Finding all classes that derive from a given base class in python</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="2327727"><ownerid>182668</ownerid><questionid>2327678</questionid><creationdate>1267029812</creationdate><lastactivity>1267029812</lastactivity><body>&lt;![CDATA[&lt;p&gt;For commonly-used values like that, one option is to have some part of your template dump those into a globally-available object, and then your scripts can access the values that way. For example, you could do something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;  body.data('assetInfo', {    'type': '{{ asset_type }}',    // ...  });&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then your scripts can just go to the "assetInfo" data element on the body tag when they need that stuff. It's nice when your scripts can be free from server-side code because you can then let the clients cache them.&lt;/p&gt;]]&gt;</body><title>Passing parameters to the Javascript code on a page using django templates?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="2510998"><ownerid>71058</ownerid><questionid>2510765</questionid><creationdate>1269460916</creationdate><lastactivity>1269460916</lastactivity><body>&lt;![CDATA[&lt;p&gt;I don't use Perforce, but you should be able to do this using  &lt;a href="http://meta-diff.sourceforge.net/" rel="nofollow"&gt;meta-diff&lt;/a&gt;, which lets you set up different diff utilities for different file types.&lt;/p&gt;]]&gt;</body><title>Extending Perforce to use a custom content diff tool for certain file extensions</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="2877433"><ownerid>236554</ownerid><questionid>2877110</questionid><creationdate>1274386285</creationdate><lastactivity>1274389961</lastactivity><body>&lt;![CDATA[&lt;pre&gt;&lt;code&gt;class Foo(object):    pass&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The class above is a "new-style" class because it inherits from the &lt;strong&gt;object&lt;/strong&gt; class.  New-style classes provide a lot of extra framework that "old-style" classes do not have.  One particular attribute of a new-style class is to be able to determine the subclasses of the  class with the &lt;strong&gt;__subclasses__&lt;/strong&gt; method.&lt;/p&gt;&lt;p&gt;There is &lt;a href="http://stackoverflow.com/questions/54867/old-style-and-new-style-classes-in-python"&gt;some&lt;/a&gt; &lt;a href="http://docs.python.org/reference/datamodel.html#new-style-and-classic-classes" rel="nofollow"&gt;good&lt;/a&gt; &lt;a href="http://bytes.com/topic/python/answers/28893-what-status-__subclasses__-method" rel="nofollow"&gt;discussion&lt;/a&gt; about new-style classes and the &lt;strong&gt;__subclasses__&lt;/strong&gt; method which use to be completely &lt;a href="http://docs.python.org/release/2.6.4/library/stdtypes.html#class.__subclasses__" rel="nofollow"&gt;undocumented&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;"Each new-style class keeps a list of weak references to its immediate subclasses. This method returns a list of all those references still alive."&lt;/p&gt;&lt;p&gt;So to answer your question, the &lt;strong&gt;__subclasses__&lt;/strong&gt; functionality is not available because in your second example:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Foo():    pass&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The old-style class Foo does not inherit from &lt;strong&gt;object&lt;/strong&gt; (so it's not a new-style class) and there for does not inherit the &lt;strong&gt;__subclasses__&lt;/strong&gt; method.&lt;/p&gt;&lt;p&gt;Note, if you don't understand why an old-style class does not have the &lt;strong&gt;__subclasses__&lt;/strong&gt; method you could always fire up a python interpreter and do some inspection with &lt;strong&gt;dir&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; class Foo(object):...     pass...&amp;gt;&amp;gt;&amp;gt; dir(Foo.__class__)['__abstractmethods__', '__base__', '__bases__', '__basicsize__', '__call__', '__class__', '__delattr__', '__dict__', '__dictoffset__', '__doc__', '__eq__', '__flags__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__instancecheck__', '__itemsize__', '__le__', '__lt__', '__module__', '__mro__', '__name__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasscheck__', '__subclasses__', '__subclasshook__', '__weakrefoffset__', 'mro']&amp;gt;&amp;gt;&amp;gt; class Bar():...     pass...&amp;gt;&amp;gt;&amp;gt; dir(Bar.__class__)Traceback (most recent call last):  File "&amp;lt;stdin&amp;gt;", line 1, in &amp;lt;module&amp;gt;AttributeError: class Bar has no attribute '__class__'&amp;gt;&amp;gt;&amp;gt; dir(Bar)['__doc__', '__module__']&amp;gt;&amp;gt;&amp;gt; dir(Foo)['__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__']&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Python new-style classes and __subclasses__ function</title><lastedit>1274389961</lastedit><accepted>true</accepted></answer><answer id="3584383"><ownerid>321013</ownerid><questionid>3569643</questionid><creationdate>1282914179</creationdate><lastactivity>1282914179</lastactivity><body>&lt;![CDATA[&lt;p&gt;I think this is definitely wrong because regardless of what the std mandates, the abort() implementation shipped with Visual Studio will never return from abort. You cannot do anything in the signal handler for SIGABRT that will prevent _exit(3) being called at the end of the abort() implementation of Visual Studio (I'm looking at the file abort.c, line 137 in the sources shipped with VS 2005).&lt;/p&gt;&lt;p&gt;So since __declspec(noreturn) is an implementation thing and since the implemenation of abort in Visual Studio will never, ever return normally, abort() should be tagged with __declspec(noreturn).&lt;/p&gt;&lt;p&gt;It follows that it's absence is a bug.&lt;/p&gt;&lt;p&gt;I think you should report this as a bug at &lt;a href="https://connect.microsoft.com/VisualStudio/" rel="nofollow"&gt;https://connect.microsoft.com/VisualStudio/&lt;/a&gt;&lt;/p&gt;]]&gt;</body><title>abort() is not __declspec(noreturn) in VS2010</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="4057426"><ownerid>237062</ownerid><questionid>4028353</questionid><creationdate>1288417494</creationdate><lastactivity>1288417494</lastactivity><body>&lt;![CDATA[&lt;p&gt;The &lt;a href="http://msdn.microsoft.com/en-us/library/aa364960.aspx" rel="nofollow"&gt;GetFileType()&lt;/a&gt; function allows to distinguish between some types of handles, in particular consoles, pipes, files, and broken handles.&lt;/p&gt;]]&gt;</body><title>Where do writes to stdout go when launched from a cygwin shell, no redirection</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="3917593"><ownerid>67022</ownerid><questionid>3875122</questionid><creationdate>1286906380</creationdate><lastactivity>1286906380</lastactivity><body>&lt;![CDATA[&lt;p&gt;I just noticed that the difference between the two uses in my original question above is the leading . on the path. And if I call etags like etags ./path/xx/yy/fooBar.c, it corrupts the file. So a workaround is to make sure the args to etags don't have leading tags. (Perhaps this is a bug in etags, because the documentation describes my usage pattern almost exactly.)&lt;/p&gt;]]&gt;</body><title>why is etags generating a corrupted TAGS file?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="1198670"><ownerid>146909</ownerid><questionid>647257</questionid><creationdate>1248854232</creationdate><lastactivity>1248854232</lastactivity><body>&lt;![CDATA[&lt;p&gt;Checkout the tiered pricing module&lt;/p&gt;]]&gt;</body><title>Provide discount to preferred customer with Satchmo?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="1201213"><ownerid>912</ownerid><questionid>1201094</questionid><creationdate>1248882295</creationdate><lastactivity>1248882295</lastactivity><body>&lt;![CDATA[&lt;p&gt;Try using the new-style &lt;code&gt;super&lt;/code&gt; calls:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Foo(ctypes.BigEndianStructure):    def __init__(self):        super(Foo, self).__init__()&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>pylint false positive for superclass __init__</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="1203379"><ownerid>118903</ownerid><questionid>1203295</questionid><creationdate>1248905836</creationdate><lastactivity>1248905836</lastactivity><body>&lt;![CDATA[&lt;p&gt;Are you using Django trunk? Recent changes (&lt;a href="http://code.djangoproject.com/changeset/9756" rel="nofollow"&gt;Changeset 9756&lt;/a&gt;) run tests in a transaction which is then rolled back. Here's the check-in comment:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;Fixed #8138 -- Changed  django.test.TestCase to rollback tests  (when the database supports it)  instead of flushing and reloading the  database. This can substantially  reduce the time it takes to run large  test suites.&lt;/p&gt;&lt;/blockquote&gt;]]&gt;</body><title>can't see records inserted by django test case</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="1203393"><ownerid>141186</ownerid><questionid>1203295</questionid><creationdate>1248905981</creationdate><lastactivity>1248905981</lastactivity><body>&lt;![CDATA[&lt;p&gt;The test framework is not saving the data to the database, the data is cleaned once the tests have finished.&lt;/p&gt;]]&gt;</body><title>can't see records inserted by django test case</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="1475198"><ownerid>126042</ownerid><questionid>1475193</questionid><creationdate>1253847242</creationdate><lastactivity>1253847242</lastactivity><body>&lt;![CDATA[&lt;p&gt;This is an artifact of garbage collection.  Even though the object is &lt;em&gt;out of scope&lt;/em&gt;, it is not necessarily &lt;em&gt;collected&lt;/em&gt; and therefore &lt;em&gt;destroyed&lt;/em&gt; until a garbage collection run occurs -- this is not like C++ where a destructor is called as soon as an object loses scope.&lt;/p&gt;&lt;p&gt;You can probably work around this particular issue by changing &lt;code&gt;connect&lt;/code&gt; to &lt;/p&gt;&lt;pre&gt;&lt;code&gt;def connect():    try:        c = MyClient(9989)        # On the second iteration, do_stuff() tries to send data and        # hangs indefinitely.        print c.do_stuff()    finally:        c.sock.close()        c.sockfile.close()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Alternatively, you could define &lt;code&gt;__enter__&lt;/code&gt; and &lt;code&gt;__exit__&lt;/code&gt; for &lt;code&gt;MyClient&lt;/code&gt;, and do &lt;a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow"&gt;a with statement&lt;/a&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;def connect():    with MyClient(9989) as c:        print c.do_stuff()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Which is effectively the same as a try-finally.&lt;/p&gt;]]&gt;</body><title>what happens to a python object when you throw an exception from it</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="1475289"><ownerid>67022</ownerid><questionid>1475193</questionid><creationdate>1253849632</creationdate><lastactivity>1253883412</lastactivity><body>&lt;![CDATA[&lt;p&gt;Ok, here's the final version. Explicitly close the socket objects when something gets borked.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import socketclass MyException(Exception):    passclass MyClient(object):    def __init__(self, port):        self.sock = socket.create_connection(('localhost', port))        self.sockfile = self.sock.makefile()    def close(self):        self.sock.close()        self.sockfile.close()    def do_stuff(self):        self._send("do_stuff\n")        response = self._receive()        if response != "ok\n":            raise MyException()        return response    def _send(self, cmd):        self.sockfile.write(cmd)        self.sockfile.flush()    def _receive(self):        return self.sockfile.readline()def connect():    try:        c = MyClient(9989)        print c.do_stuff()    except MyException:        print 'Caught MyException'    finally:        c.close()if __name__ == '__main__':    for _ in xrange(2):        connect()&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>what happens to a python object when you throw an exception from it</title><lastedit>1253883412</lastedit><accepted>false</accepted></answer><answer id="1504839"><ownerid>180174</ownerid><questionid>1504729</questionid><creationdate>1254412852</creationdate><lastactivity>1254412852</lastactivity><body>&lt;![CDATA[&lt;p&gt;I'm not sure if I understood your problem correctly, but I assume you have multiple "jobs" that can run simultaneously and want them to show on web page whether they are complete or not?&lt;/p&gt;&lt;p&gt;When launching a job the web page (python &amp;amp; mod_wsgi for example) would launch a python script that would enter the job into, let's say sqlite database and run the job, once the job completes, the script updates the entry for the job so that it is marked as complete&lt;/p&gt;&lt;p&gt;The status page would just show the stuff from the sqlite.&lt;/p&gt;&lt;p&gt;What you want to put in to the DB in addition to the job ID and perhaps start/end times depends on what you want to show on your job status web page&lt;/p&gt;&lt;p&gt;On a sidenote - if the "jobs" are compilations, meet &lt;a href="https://hudson.dev.java.net/" rel="nofollow"&gt;Hudson&lt;/a&gt;&lt;/p&gt;]]&gt;</body><title>Communicate with backend job from web server or web page</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="1504890"><ownerid>16363</ownerid><questionid>1504729</questionid><creationdate>1254413226</creationdate><lastactivity>1254413226</lastactivity><body>&lt;![CDATA[&lt;p&gt;I do this in a number of projects.  A web-app (mostly Python/CGI) that spawns a separate python script (using subprocess) which instantly &lt;a href="http://pypi.python.org/pypi/python-daemon/1.5" rel="nofollow"&gt;daemonizes itself&lt;/a&gt; to do the work. The web-app then continues to issue AJAX requests to check on the daemon process progress (I use simple txt files for communication, database would probably be better).  One nice touch is to have the daemon email the end user once it finishes (with a link to retrieve results).  This way the user can close their web browser on those jobs that take hours.&lt;/p&gt;]]&gt;</body><title>Communicate with backend job from web server or web page</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="2722311"><ownerid>179910</ownerid><questionid>2722168</questionid><creationdate>1272380606</creationdate><lastactivity>1272380606</lastactivity><body>&lt;![CDATA[&lt;p&gt;Put a recognizable pattern at the beginning of the array to help you find the data in the file.&lt;/p&gt;&lt;p&gt;If you're creating a Windows executable, put the data into a binary resource in the executable instead of just encoding it into an array -- you can then use normal Windows resource functions (&lt;a href="http://msdn.microsoft.com/en-us/library/ms648042%28VS.85%29.aspx" rel="nofollow"&gt;&lt;code&gt;FindResource&lt;/code&gt;&lt;/a&gt;, &lt;a href="http://msdn.microsoft.com/en-us/library/ms648046%28v=VS.85%29.aspx" rel="nofollow"&gt;&lt;code&gt;LoadResource&lt;/code&gt;&lt;/a&gt;, etc.) to get the data (though this is a bit trickier to get working correctly than it initially seems like it should be).&lt;/p&gt;]]&gt;</body><title>How can I extract an array from an executable file?</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="2723862"><ownerid>299301</ownerid><questionid>2722168</questionid><creationdate>1272392562</creationdate><lastactivity>1272392562</lastactivity><body>&lt;![CDATA[&lt;p&gt;If you place the embedded file within its own section you can use objcopy to extract that section into a raw output file, I think.Look into gcc's &lt;code&gt;__attribute__((section("embedded_file") ))&lt;/code&gt;Or if you are getting the file into the exe some other way using the linker you should be able to get it into another section another way, but I'm not familiar with doing that.&lt;/p&gt;]]&gt;</body><title>How can I extract an array from an executable file?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="3233242"><ownerid>388520</ownerid><questionid>3233174</questionid><creationdate>1278979645</creationdate><lastactivity>1278979645</lastactivity><body>&lt;![CDATA[&lt;p&gt;Valgrind obviously can't trace execution into the kernel, but it does know the visible semantics of most system calls.  But &lt;code&gt;ioctl&lt;/code&gt; is too unpredictable.  If you had coded your driver so that that was a &lt;code&gt;read&lt;/code&gt; call, it would get it right.  That's better practice anyway.&lt;/p&gt;]]&gt;</body><title>Does valgrind track memory initialization through drivers?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="3251586"><ownerid>20862</ownerid><questionid>3251550</questionid><creationdate>1279153332</creationdate><lastactivity>1279153332</lastactivity><body>&lt;![CDATA[&lt;p&gt;You can do it when running a new program via &lt;code&gt;exec -a &amp;lt;newname&amp;gt;&lt;/code&gt;.&lt;/p&gt;]]&gt;</body><title>How to change argv0 in bash so command shows up with different name in ps?</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="3289825"><ownerid>67022</ownerid><questionid>3251550</questionid><creationdate>1279628565</creationdate><lastactivity>1279628565</lastactivity><body>&lt;![CDATA[&lt;p&gt;I've had a chance to go through the source for bash and it does not look like there is any support for writing to argv[0].&lt;/p&gt;]]&gt;</body><title>How to change argv0 in bash so command shows up with different name in ps?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="3332061"><ownerid>26428</ownerid><questionid>3332045</questionid><creationdate>1280115314</creationdate><lastactivity>1280132597</lastactivity><body>&lt;![CDATA[&lt;p&gt;You might find that the &lt;code&gt;unbuffer&lt;/code&gt; script that comes with &lt;a href="http://expect.sourceforge.net/" rel="nofollow"&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt; may help.&lt;/p&gt;]]&gt;</body><title>bash: force exec'd process to have unbuffered stdout</title><lastedit>1280132597</lastedit><accepted>true</accepted></answer><answer id="3337057"><ownerid>402528</ownerid><questionid>3332045</questionid><creationdate>1280163426</creationdate><lastactivity>1280163426</lastactivity><body>&lt;![CDATA[&lt;p&gt;Some command line programs have an option to modify their stdout stream buffering behaviour. So that's the way to go if the C source is available ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# two command options ...man file | less -p '--no-buffer'man grep | less -p '--line-buffered'# ... and their respective source code# from: http://www.opensource.apple.com/source/file/file-6.2.1/file/src/file.cif(nobuffer)   (void) fflush(stdout);# from: http://www.opensource.apple.com/source/grep/grep-28/grep/src/grep.cif (line_buffered)   fflush (stdout);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As an alternative to using expect's unbuffer script or modifying the program's source code, you may also try to use script(1) to avoid stdout hiccups caused by a pipe:&lt;/p&gt;&lt;p&gt;See: &lt;a href="http://stackoverflow.com/questions/1401002/trick-an-application-into-thinking-its-stdin-is-interactive-not-a-pipe"&gt;Trick an application into thinking its stdin is interactive, not a pipe&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Linuxscript -c "[executable string]" /dev/null# FreeBSD, Mac OS Xscript -q /dev/null "[executable string]"&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>bash: force exec'd process to have unbuffered stdout</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="3365887"><ownerid>19563</ownerid><questionid>3365845</questionid><creationdate>1280428721</creationdate><lastactivity>1280428721</lastactivity><body>&lt;![CDATA[&lt;p&gt;I think you want to just do:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git checkout -b feat-x-exp feat-x&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This checks out a copy of &lt;code&gt;feat-x&lt;/code&gt; that you can experiment with. Once you've moved off the &lt;code&gt;feat-x&lt;/code&gt; branch, you rebase commands won't affect the original branch (so long as you avoid the two argument form that's a shortcut for checking out before a rebase).&lt;/p&gt;&lt;p&gt;If you mess up, you can go back to the state of the original branch with:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git reset --hard feat-x&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If your experiment is successful, you can move &lt;code&gt;feat-x&lt;/code&gt; to match &lt;code&gt;feat-x-exp&lt;/code&gt; and remove the experminental branch:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git checkout feat-xgit reset --hard feat-x-expgit branch -d feat-x-exp&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>How do I make a copy of a branch for testing rebase?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="3392437"><ownerid>105043</ownerid><questionid>3392392</questionid><creationdate>1280789882</creationdate><lastactivity>1280790577</lastactivity><body>&lt;![CDATA[&lt;p&gt;i think that is the typical workflow (deleting after merge)&lt;/p&gt;&lt;p&gt;EDITSo, rather than merge, at least for short lived branches, i think the idea is to rebase them on to the master. then you end up with a linear change history, and the entire branch becomes part of the main trunk. in this case you have all the changes there so you clearly don't need a copy.&lt;/p&gt;]]&gt;</body><title>When is the right time to delete a git feature branch?</title><lastedit>1280790577</lastedit><accepted>false</accepted></answer><answer id="3392942"><ownerid>86432</ownerid><questionid>3392392</questionid><creationdate>1280797952</creationdate><lastactivity>1280815404</lastactivity><body>&lt;![CDATA[&lt;p&gt;Delete after merge is the usual way.  This is why git branch -d checks to make sure that the branch is fully merged before it will delete.&lt;/p&gt;&lt;p&gt;There are a few reasons that I can think of to keep a branch around: you might want to hold onto it in case you have bugs coming back once it hits production, or you might want a historical record.&lt;/p&gt;&lt;p&gt;In either case, you have the option of tagging the head of the branch before you delete it.  A tag is like a branch in that it is a pointer to a commit, except for a few minor differences:  1) porcelain usually doesn't display tags in exploratory commands like git show-branch or tab-auto complete in checkout, 2) checking one out doesn't set HEAD (you will be in a detached HEAD), and 3) you can leave a "tag" note on top of the note on the commit that it points at.&lt;/p&gt;&lt;p&gt;This way you preserve history, and if you ever do need to bug fix, I recommend just creating a new branch off of master for the fix.  &lt;/p&gt;]]&gt;</body><title>When is the right time to delete a git feature branch?</title><lastedit>1280815404</lastedit><accepted>true</accepted></answer><answer id="3504202"><ownerid>209744</ownerid><questionid>3504166</questionid><creationdate>1282059319</creationdate><lastactivity>1282059319</lastactivity><body>&lt;![CDATA[&lt;p&gt;Depends on the operation.&lt;/p&gt;&lt;p&gt;A GET on an incomplete OID will return noSuchName.&lt;/p&gt;&lt;p&gt;A GETNEXT on an incomplete OID will return the next complete OID.&lt;/p&gt;&lt;p&gt;Note that many manufacturers fail to implement SNMP agents correctly. You can't always count on them to return the next OID as expected.&lt;/p&gt;]]&gt;</body><title>snmp: correct behavior when only part of a table index is given?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="3603631"><ownerid>224671</ownerid><questionid>3603602</questionid><creationdate>1283197152</creationdate><lastactivity>1283197152</lastactivity><body>&lt;![CDATA[&lt;p&gt;Those are just constructor of some types, e.g.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;data ListType a = Elem a | List [ListType a]&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>haskell: 99 questions #7: heterogeneous list</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="3705322"><ownerid>151292</ownerid><questionid>3705306</questionid><creationdate>1284423335</creationdate><lastactivity>1284423335</lastactivity><body>&lt;![CDATA[&lt;p&gt;You can accomplish this using &lt;code&gt;bind&lt;/code&gt;, which is originally from Boost but is included in TR1 and C++0x:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;using std::tr1::placeholders::_1;std::for_each(things.begin(), things.end(),              std::tr1::bind(&amp;amp;Controller::notify, c, _1));&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Call c++ member function with each element in a list?</title><lastedit>-1</lastedit><accepted>true</accepted></answer><answer id="3705332"><ownerid>338803</ownerid><questionid>3705306</questionid><creationdate>1284423510</creationdate><lastactivity>1284423510</lastactivity><body>&lt;![CDATA[&lt;p&gt;What about going old-school:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;for(list&amp;lt;Thing&amp;gt;::iterator i = things.begin(); i != things.end(); i++)  c.notify(*i);&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Call c++ member function with each element in a list?</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="3737771"><ownerid>22985</ownerid><questionid>3737740</questionid><creationdate>1284746487</creationdate><lastactivity>1284746487</lastactivity><body>&lt;![CDATA[&lt;pre&gt;&lt;code&gt;for ((n=0;n&amp;lt;10;n++)); do some_command; done&lt;/code&gt;&lt;/pre&gt;]]&gt;</body><title>Is there a better way to run a command N times in bash?</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="4045951"><ownerid>202555</ownerid><questionid>4045914</questionid><creationdate>1288289935</creationdate><lastactivity>1288289935</lastactivity><body>&lt;![CDATA[&lt;p&gt;You can use a Makefile for this. Make the data structure you use a Makefile target that depends on the protocol description.When Make notices that the protocol was updated more recently than the script, it will run the commands you specify to recreate your data.&lt;/p&gt;]]&gt;</body><title>Using a pre-parsed protocol definition in a script and keeping it up-to-date</title><lastedit>-1</lastedit><accepted>false</accepted></answer><answer id="4046891"><ownerid>119280</ownerid><questionid>4045914</questionid><creationdate>1288297530</creationdate><lastactivity>1288297530</lastactivity><body>&lt;![CDATA[&lt;p&gt;Assuming that the protocol description lives in a file accessible to the script, have a function to read in the parsed data which caches the parsed results in intermediate file. The logic is very very simple but the steps look very verbose since I tried to write out the full spec - in reality it should take &amp;lt;10 lines of Perl code.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Check if intermediate file exists. If it does not (or can not be read), skip to proprietary parsing step (#4)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you can read in the intermediate cache file, read in the "protocol description timestamp" field (described below). Then find out modification time of "protocol description" file via &lt;code&gt;stat()&lt;/code&gt; and compare. If modification time of "protocol description" file is &gt;= cache file's stored timestamp, skip to proprietary parsing step (#4)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Else (e.g. the time of "protocol description" file is &amp;lt; cache file's stored timestamp), read the intermediary cache file data via Data::Dumper or Storable. End.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you need to re-parse because of logic in #1 or #2, read in "protocol description" file, parse it into your data structure. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Then create a hash with 2 keys: "protocol_description_timestamp" (with the value being the modification time of protocol description file derived from &lt;code&gt;stat&lt;/code&gt; call) and second key "data", with the value being a reference to the data structure you just produced as a result of parsing.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Then save that data structure into the intermediate cache file using &lt;code&gt;Storable&lt;/code&gt; or &lt;code&gt;Data::Dumper&lt;/code&gt; or any other method of your choice for storing Perl data structires.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;]]&gt;</body><title>Using a pre-parsed protocol definition in a script and keeping it up-to-date</title><lastedit>-1</lastedit><accepted>true</accepted></answer></answers></QA>