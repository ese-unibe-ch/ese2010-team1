h1. Search module

The **Search** module allows you to have basic full text search functionality to your JPA Model. It is based on Lucene, and requires a real file system to store its indexes.

h2. <a> Enable the module</a>

In the **/conf/application.conf** file, enable the Search module by adding this line: 

bc. # The search module
module.search=${play.path}/modules/search

h2. <a> Indexing your objects </a>

Use the **@Indexed** annotation to mark **your Model**, and then use the **@Field** to mark the fields to be indexed.

bc. @Indexed
public class Folder extends Model {
    @Field
    @Column(unique=true)
    public Integer poseidonNumber; 
    @Field
    public String object;

The **@Field** annotation currently supports only primitive types.

h2. <a> Search the objects </a>

Use the **Search** helper to build your queries:

bc. Search.search("object:dogs", Folder.class)

The first parameter is a lucene query and the second is your Model class. You may want to refer to the Lucene query documentation at this point, knowing that the **Search** maintains a separated index per class and adds the properties marked with **@Field** as a Lucene Field.

The Search.search returns a query object that you can tweak:

bc. Query q = Search.search("object:dogs", Folder.class);
q.orderBy("object")
    .page(2,5)
    .reverse();
    

To finish your query, if you wish to retrieve your **Model** objects, use

bc. List<Folder> folders = q.fetch();
    

or to get only ids (to use in a JPA query by example...):

bc. List<Long> folderIds = q.fetchIds();
    

To get full informations (like relevance), you would use:

bc. List<QueryResult> results = q.executeQuery();
    

h2. <a> Maintaining the indexes </a>

Each time you create, update or delete your **Model** objects, the corresponding index is automatically updated. 

Should you need to re-index your objects (like if you have manually modified your database), you will reboot your application with:

bc. play.search.reindex=enabled

In your conf/application.conf. Don't forget to remove it after!

h2. <a> Misc configuration </a>

You can use the following properties in your conf/application.conf file:

bc. play.search.path=/tmp/myDevApplication
play.search.analyser=org.apache.lucene.analysis.standard.StandardAnalyzer

**play.search.path** is where the module stores it's indexes
**play.search.analyser** is the lucene analyzer class used for indexation.



